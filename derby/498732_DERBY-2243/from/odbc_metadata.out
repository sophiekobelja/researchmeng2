=============== Begin ODBC 3.0 Compliance Tests =================
SQLProcedures:
==> ODBC type/name checking done.
SQLProcedureColumns:
==> ODBC type/name checking done.
SQLTables:
==> ODBC type/name checking done.
SQLColumns:
==> ODBC type/name checking done.
SQLColumnPrivileges:
==> ODBC type/name checking done.
SQLTablePrivileges:
==> ODBC type/name checking done.
SQLSpecialColumns: getBestRowIdentifier
==> ODBC type/name checking done.
SQLSpecialColumns: getVersionColumns
==> ODBC type/name checking done.
SQLPrimaryKeys:
==> ODBC type/name checking done.
SQLForeignKeys: getImportedKeys
==> ODBC type/name checking done.
SQLForeignKeys: getExportedKeys
==> ODBC type/name checking done.
SQLForeignKeys: getCrossReference
==> ODBC type/name checking done.
SQLGetTypeInfo
==> ODBC type/name checking done.
SQLStatistics:
==> ODBC type/name checking done.
=============== End ODBC 3.0 Compliance Tests =================
Test metadata starting
Union Result -- precision: 10 scale: 2 display size: 13 type name: DECIMAL
dec(10,2) -- precision: 10 scale: 2 display size: 12 type name: DECIMAL
real -- precision: 7 scale: 0 display size: 13 type name: REAL
double -- precision: 15 scale: 0 display size: 22 type name: DOUBLE
real + dec(10,2) -- precision: 7 scale: 0 display size: 13 type name: REAL
double precision - dec(10,2) -- precision: 15 scale: 0 display size: 22 type name: DOUBLE
dec(10,2) - double precision -- precision: 15 scale: 2 display size: 22 type name: DOUBLE
result row: 11.10 3.3 4.4 14.4 -6.699999999999999 6.699999999999999
DECIMAL(10,0) -- precision: 10 scale: 0 display size: 11 type name: DECIMAL
DECIMAL(10,10) -- precision: 10 scale: 10 display size: 13 type name: DECIMAL
DECIMAL(10,2) -- precision: 10 scale: 2 display size: 12 type name: DECIMAL
Column result scale after division is: 23
dc / 2 = 5.55000000000000000000000
dc / 2 = 5.55500000000000000000000
JDBC Driver 'Apache Derby Embedded JDBC Driver', version 10.3 (10.3.0.0 alpha -(EXPECTED SUBVERSION INFO))
DatabaseMetaData.getURL test passed
allTablesAreSelectable(): true
maxColumnNameLength(): 128
getSchemas():
TABLE_SCHEM[VARCHAR],TABLE_CATALOG[VARCHAR]
APP,null
NULLID,null
SQLJ,null
SYS,null
SYSCAT,null
SYSCS_DIAG,null
SYSCS_UTIL,null
SYSFUN,null
SYSIBM,null
SYSPROC,null
SYSSTAT,null
getSchemas(String, String):
TABLE_SCHEM[VARCHAR],TABLE_CATALOG[VARCHAR]
APP,null
NULLID,null
SQLJ,null
SYS,null
SYSCAT,null
SYSCS_DIAG,null
SYSCS_UTIL,null
SYSFUN,null
SYSIBM,null
SYSPROC,null
SYSSTAT,null
TABLE_SCHEM[VARCHAR],TABLE_CATALOG[VARCHAR]
SYS,null
SYSCAT,null
SYSCS_DIAG,null
SYSCS_UTIL,null
SYSFUN,null
SYSIBM,null
SYSPROC,null
SYSSTAT,null
TABLE_SCHEM[VARCHAR],TABLE_CATALOG[VARCHAR]
APP,null
TABLE_SCHEM[VARCHAR],TABLE_CATALOG[VARCHAR]
getCatalogs():
TABLE_CAT[CHAR]
getSearchStringEscape(): 
getSQLKeywords(): ALIAS,BIGINT,BOOLEAN,CALL,CLASS,COPY,DB2J_DEBUG,EXECUTE,EXPLAIN,FILE,FILTER,GETCURRENTCONNECTION,INDEX,INSTANCEOF,METHOD,NEW,OFF,PROPERTIES,PUBLICATION,RECOMPILE,REFRESH,RENAME,RUNTIMESTATISTICS,STATEMENT,STATISTICS,TIMING,WAIT
getDefaultTransactionIsolation(): 2
getProcedures():
PROCEDURE_CAT[VARCHAR],PROCEDURE_SCHEM[VARCHAR],PROCEDURE_NAME[VARCHAR],NUM_INPUT_PARAMS[INTEGER],NUM_OUTPUT_PARAMS[INTEGER],NUM_RESULT_SETS[INTEGER],REMARKS[VARCHAR],PROCEDURE_TYPE[SMALLINT]
,APP,GETPCTEST1,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc,1
,APP,GETPCTEST2,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc,1
,APP,GETPCTEST3A,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc,1
,APP,GETPCTEST3B,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc,1
,APP,GETPCTEST4A,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc4a,1
,APP,GETPCTEST4B,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc4b,1
,APP,GETPCTEST4BX,null,null,null,org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata.getpc4b,1
getFunctions(null,null,null):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],REMARKS[VARCHAR],SPECIFIC_NAME[VARCHAR]
null,APP,DUMMY1,java.some.func,xxxxGENERATED-IDxxxx
null,APP,DUMMY2,java.some.func,xxxxGENERATED-IDxxxx
null,APP,DUMMY3,java.some.func,xxxxGENERATED-IDxxxx
null,APP,DUMMY4,java.some.func,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_CHECK_TABLE,org.apache.derby.catalog.SystemProcedures.SYSCS_CHECK_TABLE,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_DATABASE_PROPERTY,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_DATABASE_PROPERTY,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_RUNTIMESTATISTICS,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_RUNTIMESTATISTICS,xxxxGENERATED-IDxxxx
getFunctions("Dummy Catalog",null,null):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],REMARKS[VARCHAR],SPECIFIC_NAME[VARCHAR]
null,APP,DUMMY1,java.some.func,xxxxGENERATED-IDxxxx
null,APP,DUMMY2,java.some.func,xxxxGENERATED-IDxxxx
null,APP,DUMMY3,java.some.func,xxxxGENERATED-IDxxxx
null,APP,DUMMY4,java.some.func,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_CHECK_TABLE,org.apache.derby.catalog.SystemProcedures.SYSCS_CHECK_TABLE,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_DATABASE_PROPERTY,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_DATABASE_PROPERTY,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_RUNTIMESTATISTICS,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_RUNTIMESTATISTICS,xxxxGENERATED-IDxxxx
getFunctions(null,"%SYS%",null):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],REMARKS[VARCHAR],SPECIFIC_NAME[VARCHAR]
null,SYSCS_UTIL,SYSCS_CHECK_TABLE,org.apache.derby.catalog.SystemProcedures.SYSCS_CHECK_TABLE,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_DATABASE_PROPERTY,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_DATABASE_PROPERTY,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_RUNTIMESTATISTICS,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_RUNTIMESTATISTICS,xxxxGENERATED-IDxxxx
getFunctions(null,null,"%GET%"):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],REMARKS[VARCHAR],SPECIFIC_NAME[VARCHAR]
null,SYSCS_UTIL,SYSCS_GET_DATABASE_PROPERTY,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_DATABASE_PROPERTY,xxxxGENERATED-IDxxxx
null,SYSCS_UTIL,SYSCS_GET_RUNTIMESTATISTICS,org.apache.derby.catalog.SystemProcedures.SYSCS_GET_RUNTIMESTATISTICS,xxxxGENERATED-IDxxxx
getFunctions("","",null):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],REMARKS[VARCHAR],SPECIFIC_NAME[VARCHAR]
getFunctionColumns(null,null,null,null):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],COLUMN_NAME[VARCHAR],COLUMN_TYPE[SMALLINT],DATA_TYPE[INTEGER],TYPE_NAME[VARCHAR],PRECISION[INTEGER],LENGTH[INTEGER],SCALE[SMALLINT],RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SPECIFIC_NAME[VARCHAR],METHOD_ID[SMALLINT],PARAMETER_ID[SMALLINT]
null,APP,DUMMY1,,4,5,SMALLINT,5,2,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,1,-1
null,APP,DUMMY1,X,1,5,SMALLINT,5,2,0,10,1,null,null,1,YES,xxxxGENERATED-IDxxxx,1,0
null,APP,DUMMY2,,4,4,INTEGER,10,4,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,2,-1
null,APP,DUMMY2,X,1,4,INTEGER,10,4,0,10,1,null,null,1,YES,xxxxGENERATED-IDxxxx,2,0
null,APP,DUMMY2,Y,1,5,SMALLINT,5,2,0,10,1,null,null,2,YES,xxxxGENERATED-IDxxxx,2,1
null,APP,DUMMY3,,4,12,VARCHAR,16,32,null,null,1,null,32,0,YES,xxxxGENERATED-IDxxxx,2,-1
null,APP,DUMMY3,X,1,12,VARCHAR,16,32,null,null,1,null,32,1,YES,xxxxGENERATED-IDxxxx,2,0
null,APP,DUMMY3,Y,1,4,INTEGER,10,4,0,10,1,null,null,2,YES,xxxxGENERATED-IDxxxx,2,1
null,APP,DUMMY4,,4,4,INTEGER,10,4,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,2,-1
null,APP,DUMMY4,X,1,12,VARCHAR,128,256,null,null,1,null,256,1,YES,xxxxGENERATED-IDxxxx,2,0
null,APP,DUMMY4,Y,1,4,INTEGER,10,4,0,10,1,null,null,2,YES,xxxxGENERATED-IDxxxx,2,1
null,SYSCS_UTIL,SYSCS_CHECK_TABLE,,4,4,INTEGER,10,4,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,2,-1
null,SYSCS_UTIL,SYSCS_CHECK_TABLE,SCHEMANAME,1,12,VARCHAR,128,256,null,null,1,null,256,1,YES,xxxxGENERATED-IDxxxx,2,0
null,SYSCS_UTIL,SYSCS_CHECK_TABLE,TABLENAME,1,12,VARCHAR,128,256,null,null,1,null,256,2,YES,xxxxGENERATED-IDxxxx,2,1
null,SYSCS_UTIL,SYSCS_GET_DATABASE_PROPERTY,,4,12,VARCHAR,32672,65344,null,null,1,null,65344,0,YES,xxxxGENERATED-IDxxxx,1,-1
null,SYSCS_UTIL,SYSCS_GET_DATABASE_PROPERTY,KEY,1,12,VARCHAR,128,256,null,null,1,null,256,1,YES,xxxxGENERATED-IDxxxx,1,0
null,SYSCS_UTIL,SYSCS_GET_RUNTIMESTATISTICS,,4,12,VARCHAR,32672,65344,null,null,1,null,65344,0,YES,xxxxGENERATED-IDxxxx,0,-1
getFunctionColumns(null,"APP","DUMMY%","X"):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],COLUMN_NAME[VARCHAR],COLUMN_TYPE[SMALLINT],DATA_TYPE[INTEGER],TYPE_NAME[VARCHAR],PRECISION[INTEGER],LENGTH[INTEGER],SCALE[SMALLINT],RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SPECIFIC_NAME[VARCHAR],METHOD_ID[SMALLINT],PARAMETER_ID[SMALLINT]
null,APP,DUMMY1,X,1,5,SMALLINT,5,2,0,10,1,null,null,1,YES,xxxxGENERATED-IDxxxx,1,0
null,APP,DUMMY2,X,1,4,INTEGER,10,4,0,10,1,null,null,1,YES,xxxxGENERATED-IDxxxx,2,0
null,APP,DUMMY3,X,1,12,VARCHAR,16,32,null,null,1,null,32,1,YES,xxxxGENERATED-IDxxxx,2,0
null,APP,DUMMY4,X,1,12,VARCHAR,128,256,null,null,1,null,256,1,YES,xxxxGENERATED-IDxxxx,2,0
getFunctionColumns(null,"APP","DUMMY%",""):
FUNCTION_CAT[VARCHAR],FUNCTION_SCHEM[VARCHAR],FUNCTION_NAME[VARCHAR],COLUMN_NAME[VARCHAR],COLUMN_TYPE[SMALLINT],DATA_TYPE[INTEGER],TYPE_NAME[VARCHAR],PRECISION[INTEGER],LENGTH[INTEGER],SCALE[SMALLINT],RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SPECIFIC_NAME[VARCHAR],METHOD_ID[SMALLINT],PARAMETER_ID[SMALLINT]
null,APP,DUMMY1,,4,5,SMALLINT,5,2,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,1,-1
null,APP,DUMMY2,,4,4,INTEGER,10,4,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,2,-1
null,APP,DUMMY3,,4,12,VARCHAR,16,32,null,null,1,null,32,0,YES,xxxxGENERATED-IDxxxx,2,-1
null,APP,DUMMY4,,4,4,INTEGER,10,4,0,10,1,null,null,0,YES,xxxxGENERATED-IDxxxx,2,-1
getUDTs() with user-named types null :
TYPE_CAT[CHAR],TYPE_SCHEM[CHAR],TYPE_NAME[VARCHAR],CLASS_NAME[LONG VARCHAR],DATA_TYPE[INTEGER],REMARKS[CHAR],BASE_TYPE[SMALLINT]
getUDTs() with user-named types in ('JAVA_OBJECT') :
TYPE_CAT[CHAR],TYPE_SCHEM[CHAR],TYPE_NAME[VARCHAR],CLASS_NAME[LONG VARCHAR],DATA_TYPE[INTEGER],REMARKS[CHAR],BASE_TYPE[SMALLINT]
getUDTs() with user-named types in ('STRUCT') :
TYPE_CAT[CHAR],TYPE_SCHEM[CHAR],TYPE_NAME[VARCHAR],CLASS_NAME[LONG VARCHAR],DATA_TYPE[INTEGER],REMARKS[CHAR],BASE_TYPE[SMALLINT]
getUDTs() with user-named types in ('DISTINCT') :
TYPE_CAT[CHAR],TYPE_SCHEM[CHAR],TYPE_NAME[VARCHAR],CLASS_NAME[LONG VARCHAR],DATA_TYPE[INTEGER],REMARKS[CHAR],BASE_TYPE[SMALLINT]
getUDTs() with user-named types in ('JAVA_OBJECT', 'STRUCT') :
TYPE_CAT[CHAR],TYPE_SCHEM[CHAR],TYPE_NAME[VARCHAR],CLASS_NAME[LONG VARCHAR],DATA_TYPE[INTEGER],REMARKS[CHAR],BASE_TYPE[SMALLINT]
getClientInfoProperties():
NAME[VARCHAR],MAX_LEN[INTEGER],DEFAULT_VALUE[VARCHAR],DESCRIPTION[VARCHAR]
allProceduresAreCallable(): true
getUserName(): APP
isReadOnly(): false
nullsAreSortedHigh(): true
nullsAreSortedLow(): false
nullsAreSortedAtStart(): false
nullsAreSortedAtEnd(): false
getDatabaseProductName(): Apache Derby
getDatabaseProductVersion(): 10.3.0.0 alpha -(EXPECTED SUBVERSION INFO)
getDriverVersion(): 10.3.0.0 alpha -(EXPECTED SUBVERSION INFO)
usesLocalFiles(): true
usesLocalFilePerTable(): true
supportsMixedCaseIdentifiers(): false
storesUpperCaseIdentifiers(): true
storesLowerCaseIdentifiers(): false
storesMixedCaseIdentifiers(): false
supportsMixedCaseQuotedIdentifiers(): true
storesUpperCaseQuotedIdentifiers(): false
storesLowerCaseQuotedIdentifiers(): false
storesMixedCaseQuotedIdentifiers(): true
getIdentifierQuoteString(): "
getNumericFunctions(): ABS,ACOS,ASIN,ATAN,CEILING,COS,COT,DEGREES,EXP,FLOOR,LOG,LOG10,MOD,PI,RADIANS,RAND,SIGN,SIN,SQRT,TAN
getStringFunctions(): CONCAT,LENGTH,LCASE,LOCATE,LTRIM,RTRIM,SUBSTRING,UCASE
getSystemFunctions(): USER
getTimeDateFunctions(): CURDATE,CURTIME,HOUR,MINUTE,MONTH,SECOND,TIMESTAMPADD,TIMESTAMPDIFF,YEAR
getExtraNameCharacters(): 
supportsAlterTableWithAddColumn(): true
supportsAlterTableWithDropColumn(): true
supportsColumnAliasing(): true
nullPlusNonNullIsNull(): true
supportsConvert(): true
supportsConvert(Types.INTEGER, Types.SMALLINT): false
supportsTableCorrelationNames(): true
supportsDifferentTableCorrelationNames(): true
supportsExpressionsInOrderBy(): false
supportsOrderByUnrelated(): false
supportsGroupBy(): true
supportsGroupByUnrelated(): true
supportsGroupByBeyondSelect(): true
supportsLikeEscapeClause(): true
supportsMultipleResultSets(): true
supportsMultipleTransactions(): true
supportsNonNullableColumns(): true
supportsMinimumSQLGrammar(): true
supportsCoreSQLGrammar(): false
supportsExtendedSQLGrammar(): false
supportsANSI92EntryLevelSQL(): false
supportsANSI92IntermediateSQL(): false
supportsANSI92FullSQL(): false
supportsIntegrityEnhancementFacility(): false
supportsOuterJoins(): true
supportsFullOuterJoins(): false
supportsLimitedOuterJoins(): true
getSchemaTerm(): SCHEMA
getProcedureTerm(): PROCEDURE
getCatalogTerm(): CATALOG
isCatalogAtStart(): false
getCatalogSeparator(): 
supportsSchemasInDataManipulation(): true
supportsSchemasInProcedureCalls(): true
supportsSchemasInTableDefinitions(): true
supportsSchemasInIndexDefinitions(): true
supportsSchemasInPrivilegeDefinitions(): true
supportsCatalogsInDataManipulation(): false
supportsCatalogsInProcedureCalls(): false
supportsCatalogsInTableDefinitions(): false
supportsCatalogsInIndexDefinitions(): false
supportsCatalogsInPrivilegeDefinitions(): false
supportsPositionedDelete(): true
supportsPositionedUpdate(): true
supportsSelectForUpdate(): true
supportsStoredProcedures(): true
supportsSubqueriesInComparisons(): true
supportsSubqueriesInExists(): true
supportsSubqueriesInIns(): true
supportsSubqueriesInQuantifieds(): true
supportsCorrelatedSubqueries(): true
supportsUnion(): true
supportsUnionAll(): true
supportsOpenCursorsAcrossCommit(): false
supportsOpenCursorsAcrossRollback(): false
supportsOpenStatementsAcrossCommit(): true
supportsOpenStatementsAcrossRollback(): false
getMaxBinaryLiteralLength(): 0
getMaxCharLiteralLength(): 0
getMaxColumnsInGroupBy(): 0
getMaxColumnsInIndex(): 0
getMaxColumnsInOrderBy(): 0
getMaxColumnsInSelect(): 0
getMaxColumnsInTable(): 0
getMaxConnections(): 0
getMaxCursorNameLength(): 128
getMaxIndexLength(): 0
getMaxSchemaNameLength(): 128
getMaxProcedureNameLength(): 128
getMaxCatalogNameLength(): 0
getMaxRowSize(): 0
doesMaxRowSizeIncludeBlobs(): true
getMaxStatementLength(): 0
getMaxStatements(): 0
getMaxTableNameLength(): 128
getMaxTablesInSelect(): 0
getMaxUserNameLength(): 30
supportsTransactions(): true
supportsTransactionIsolationLevel(Connection.TRANSACTION_NONE): false
supportsTransactionIsolationLevel(Connection.TRANSACTION_REPEATABLE_READ): true
supportsTransactionIsolationLevel(Connection.TRANSACTION_SERIALIZABLE): true
supportsDataDefinitionAndDataManipulationTransactions(): true
supportsDataManipulationTransactionsOnly(): false
dataDefinitionCausesTransactionCommit(): false
dataDefinitionIgnoredInTransactions(): false
Test the metadata calls related to visibility of changes made by others for different resultset types
Since Derby materializes a forward only ResultSet incrementally, it is possible to see changes
made by others and hence following 3 metadata calls will return true for forward only ResultSets.
othersUpdatesAreVisible(ResultSet.TYPE_FORWARD_ONLY)? true
othersDeletesAreVisible(ResultSet.TYPE_FORWARD_ONLY)? true
othersInsertsAreVisible(ResultSet.TYPE_FORWARD_ONLY)? true
Scroll insensitive ResultSet by their definition do not see changes made by others and hence following metadata calls return false
othersUpdatesAreVisible(ResultSet.TYPE_SCROLL_INSENSITIVE)? false
othersDeletesAreVisible(ResultSet.TYPE_SCROLL_INSENSITIVE)? false
othersInsertsAreVisible(ResultSet.TYPE_SCROLL_INSENSITIVE)? false
Derby does not yet implement scroll sensitive resultsets and hence following metadata calls return false
othersUpdatesAreVisible(ResultSet.TYPE_SCROLL_SENSITIVE)? false
othersDeletesAreVisible(ResultSet.TYPE_SCROLL_SENSITIVE)? false
othersInsertsAreVisible(ResultSet.TYPE_SCROLL_SENSITIVE)? false
Test the metadata calls related to visibility of *own* changes for different resultset types
ownUpdatesAreVisible(ResultSet.TYPE_FORWARD_ONLY)? false
ownDeletesAreVisible(ResultSet.TYPE_FORWARD_ONLY)? false
ownInsertsAreVisible(ResultSet.TYPE_FORWARD_ONLY)? false
Scroll insensitive ResultSet see updates and deletes, but not inserts
ownUpdatesAreVisible(ResultSet.TYPE_SCROLL_INSENSITIVE)? true
ownDeletesAreVisible(ResultSet.TYPE_SCROLL_INSENSITIVE)? true
ownInsertsAreVisible(ResultSet.TYPE_SCROLL_INSENSITIVE)? false
Derby does not yet implement scroll sensitive resultsets and hence following metadata calls return false
ownUpdatesAreVisible(ResultSet.TYPE_SCROLL_SENSITIVE)? false
ownDeletesAreVisible(ResultSet.TYPE_SCROLL_SENSITIVE)? false
ownInsertsAreVisible(ResultSet.TYPE_SCROLL_SENSITIVE)? false
Test the metadata calls related to detectability of visible changes for different resultset types
Expect true for updates and deletes of TYPE_SCROLL_INSENSITIVE, all others should be false
updatesAreDetected(ResultSet.TYPE_FORWARD_ONLY)? false
deletesAreDetected(ResultSet.TYPE_FORWARD_ONLY)? false
insertsAreDetected(ResultSet.TYPE_FORWARD_ONLY)? false
updatesAreDetected(ResultSet.TYPE_SCROLL_INSENSITIVE)? true
deletesAreDetected(ResultSet.TYPE_SCROLL_INSENSITIVE)? true
insertsAreDetected(ResultSet.TYPE_SCROLL_INSENSITIVE)? false
updatesAreDetected(ResultSet.TYPE_SCROLL_SENSITIVE)? false
deletesAreDetected(ResultSet.TYPE_SCROLL_SENSITIVE)? false
insertsAreDetected(ResultSet.TYPE_SCROLL_SENSITIVE)? false
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_READ_ONLY: true
SupportsResultSetConcurrency: TYPE_FORWARD_ONLY,CONCUR_UPDATABLE: true
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_READ_ONLY: true
SupportsResultSetConcurrency: TYPE_SCROLL_INSENSITIVE,CONCUR_UPDATABLE: true
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_READ_ONLY: false
SupportsResultSetConcurrency: TYPE_SCROLL_SENSITIVE,CONCUR_UPDATABLE: false
getConnection(): same connection
getProcedureColumns():
PROCEDURE_CAT[VARCHAR],PROCEDURE_SCHEM[VARCHAR],PROCEDURE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],COLUMN_TYPE[SMALLINT],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],METHOD_ID[SMALLINT],PARAMETER_ID[SMALLINT]
null,APP,GETPCTEST1,OUTB,4,12,VARCHAR,3,6,null,null,1,null,null,12,null,6,1,YES,12,0
null,APP,GETPCTEST1,A,1,12,VARCHAR,3,6,null,null,1,null,null,12,null,6,2,YES,12,1
null,APP,GETPCTEST1,B,1,2,NUMERIC,5,14,0,10,1,null,null,2,null,null,3,YES,12,2
null,APP,GETPCTEST1,C,1,5,SMALLINT,5,2,0,10,1,null,null,5,null,null,4,YES,12,3
null,APP,GETPCTEST1,E,1,5,SMALLINT,5,2,0,10,1,null,null,5,null,null,5,YES,12,4
null,APP,GETPCTEST1,F,1,4,INTEGER,10,4,0,10,1,null,null,4,null,null,6,YES,12,5
null,APP,GETPCTEST1,G,1,-5,BIGINT,19,40,0,10,1,null,null,-5,null,null,7,YES,12,6
null,APP,GETPCTEST1,H,1,8,DOUBLE,52,8,null,2,1,null,null,8,null,null,8,YES,12,7
null,APP,GETPCTEST1,I,1,8,DOUBLE,52,8,null,2,1,null,null,8,null,null,9,YES,12,8
null,APP,GETPCTEST1,K,1,91,DATE,10,6,null,2,1,null,null,9,1,null,10,YES,12,9
null,APP,GETPCTEST1,L,1,92,TIME,8,6,0,2,1,null,null,9,2,null,11,YES,12,10
null,APP,GETPCTEST1,T,1,93,TIMESTAMP,26,16,6,2,1,null,null,9,3,null,12,YES,12,11
null,APP,GETPCTEST2,PA,1,4,INTEGER,10,4,0,10,1,null,null,4,null,null,1,YES,2,0
null,APP,GETPCTEST2,PB,1,-5,BIGINT,19,40,0,10,1,null,null,-5,null,null,2,YES,2,1
null,APP,GETPCTEST3A,STRING1,1,12,VARCHAR,5,10,null,null,1,null,null,12,null,10,1,YES,2,0
null,APP,GETPCTEST3A,STRING2,4,12,VARCHAR,5,10,null,null,1,null,null,12,null,10,2,YES,2,1
null,APP,GETPCTEST3B,STRING3,1,12,VARCHAR,5,10,null,null,1,null,null,12,null,10,1,YES,2,0
null,APP,GETPCTEST3B,STRING4,2,12,VARCHAR,5,10,null,null,1,null,null,12,null,10,2,YES,2,1
null,APP,GETPCTEST4BX,RETPARAM,4,4,INTEGER,10,4,0,10,1,null,null,4,null,null,1,YES,1,0
getTables() with TABLE_TYPE in ('SYSTEM TABLE') :
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],TABLE_TYPE[VARCHAR],REMARKS[VARCHAR],TYPE_CAT[VARCHAR],TYPE_SCHEM[VARCHAR],TYPE_NAME[VARCHAR],SELF_REFERENCING_COL_NAME[VARCHAR],REF_GENERATION[VARCHAR]
,SYS,SYSALIASES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCHECKS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCOLPERMS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCOLUMNS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCONGLOMERATES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCONSTRAINTS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSDEPENDS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSFILES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSFOREIGNKEYS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSKEYS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSROUTINEPERMS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSSCHEMAS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSSTATEMENTS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSSTATISTICS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSTABLEPERMS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSTABLES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSTRIGGERS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSVIEWS,SYSTEM TABLE,,null,null,null,null,null
,SYSIBM,SYSDUMMY1,SYSTEM TABLE,,null,null,null,null,null
getTables() with no types:
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],TABLE_TYPE[VARCHAR],REMARKS[VARCHAR],TYPE_CAT[VARCHAR],TYPE_SCHEM[VARCHAR],TYPE_NAME[VARCHAR],SELF_REFERENCING_COL_NAME[VARCHAR],REF_GENERATION[VARCHAR]
,SYS,SYSALIASES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCHECKS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCOLPERMS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCOLUMNS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCONGLOMERATES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSCONSTRAINTS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSDEPENDS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSFILES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSFOREIGNKEYS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSKEYS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSROUTINEPERMS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSSCHEMAS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSSTATEMENTS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSSTATISTICS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSTABLEPERMS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSTABLES,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSTRIGGERS,SYSTEM TABLE,,null,null,null,null,null
,SYS,SYSVIEWS,SYSTEM TABLE,,null,null,null,null,null
,SYSIBM,SYSDUMMY1,SYSTEM TABLE,,null,null,null,null,null
,APP,ALLTYPES,TABLE,,null,null,null,null,null
,APP,INFLIGHT,TABLE,,null,null,null,null,null
,APP,LOUIE,TABLE,,null,null,null,null,null
,APP,REFTAB,TABLE,,null,null,null,null,null
,APP,REFTAB2,TABLE,,null,null,null,null,null
,APP,T,TABLE,,null,null,null,null,null
,APP,SCREWIE,VIEW,,null,null,null,null,null
getTables() with TABLE_TYPE in ('VIEW','TABLE') :
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],TABLE_TYPE[VARCHAR],REMARKS[VARCHAR],TYPE_CAT[VARCHAR],TYPE_SCHEM[VARCHAR],TYPE_NAME[VARCHAR],SELF_REFERENCING_COL_NAME[VARCHAR],REF_GENERATION[VARCHAR]
,APP,ALLTYPES,TABLE,,null,null,null,null,null
,APP,INFLIGHT,TABLE,,null,null,null,null,null
,APP,LOUIE,TABLE,,null,null,null,null,null
,APP,REFTAB,TABLE,,null,null,null,null,null
,APP,REFTAB2,TABLE,,null,null,null,null,null
,APP,T,TABLE,,null,null,null,null,null
,APP,SCREWIE,VIEW,,null,null,null,null,null
getTableTypes():
TABLE_TYPE[VARCHAR]
SYNONYM
SYSTEM TABLE
TABLE
VIEW
getColumns():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SCOPE_CATLOG[VARCHAR],SCOPE_SCHEMA[VARCHAR],SCOPE_TABLE[VARCHAR],SOURCE_DATA_TYPE[SMALLINT],IS_AUTOINCREMENT[VARCHAR]
getColumns('SYSTABLES'):
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SCOPE_CATLOG[VARCHAR],SCOPE_SCHEMA[VARCHAR],SCOPE_TABLE[VARCHAR],SOURCE_DATA_TYPE[SMALLINT],IS_AUTOINCREMENT[VARCHAR]
,SYS,SYSTABLES,TABLEID,1,CHAR,36,72,null,null,0,,null,1,null,72,1,NO,null,null,null,null,NO
,SYS,SYSTABLES,TABLENAME,12,VARCHAR,128,256,null,null,0,,null,12,null,256,2,NO,null,null,null,null,NO
,SYS,SYSTABLES,TABLETYPE,1,CHAR,1,2,null,null,0,,null,1,null,2,3,NO,null,null,null,null,NO
,SYS,SYSTABLES,SCHEMAID,1,CHAR,36,72,null,null,0,,null,1,null,72,4,NO,null,null,null,null,NO
,SYS,SYSTABLES,LOCKGRANULARITY,1,CHAR,1,2,null,null,0,,null,1,null,2,5,NO,null,null,null,null,NO
getColumns('ALLTYPES'):
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SCOPE_CATLOG[VARCHAR],SCOPE_SCHEMA[VARCHAR],SCOPE_TABLE[VARCHAR],SOURCE_DATA_TYPE[SMALLINT],IS_AUTOINCREMENT[VARCHAR]
,APP,ALLTYPES,SMALLINTCOL,5,SMALLINT,5,2,0,10,1,,null,5,null,null,1,YES,null,null,null,null,NO
,APP,ALLTYPES,INTCOL,4,INTEGER,10,4,0,10,1,,20,4,null,null,2,YES,null,null,null,null,NO
,APP,ALLTYPES,BIGINTCOL,-5,BIGINT,19,40,0,10,1,,null,-5,null,null,3,YES,null,null,null,null,NO
,APP,ALLTYPES,REALCOL,7,REAL,23,4,null,2,1,,null,7,null,null,4,YES,null,null,null,null,NO
,APP,ALLTYPES,DOUBLEPRECCOL,8,DOUBLE,52,8,null,2,1,,10,8,null,null,5,YES,null,null,null,null,NO
,APP,ALLTYPES,FLOATCOL,8,DOUBLE,52,8,null,2,1,,8.8,8,null,null,6,YES,null,null,null,null,NO
,APP,ALLTYPES,DECIMALCOL10P4S,3,DECIMAL,10,24,4,10,1,,null,3,null,null,7,YES,null,null,null,null,NO
,APP,ALLTYPES,NUMERICCOL20P2S,2,NUMERIC,20,44,2,10,1,,null,2,null,null,8,YES,null,null,null,null,NO
,APP,ALLTYPES,CHAR8COL___,1,CHAR,8,16,null,null,1,,null,1,null,16,9,YES,null,null,null,null,NO
,APP,ALLTYPES,CHAR8FORBITCOL___,-2,CHAR () FOR BIT DATA,8,8,null,null,1,,null,-2,null,8,10,YES,null,null,null,null,NO
,APP,ALLTYPES,VARCHAR9COL,12,VARCHAR,9,18,null,null,1,,null,12,null,18,11,YES,null,null,null,null,NO
,APP,ALLTYPES,VARCHAR9BITCOL,-3,VARCHAR () FOR BIT DATA,9,9,null,null,1,,null,-3,null,9,12,YES,null,null,null,null,NO
,APP,ALLTYPES,LONGVARCHARCOL,-1,LONG VARCHAR,32700,65400,null,null,1,,null,-1,null,null,13,YES,null,null,null,null,NO
,APP,ALLTYPES,LONGVARBINARYCOL,-4,LONG VARCHAR FOR BIT DATA,32700,32700,null,null,1,,null,-4,null,null,14,YES,null,null,null,null,NO
,APP,ALLTYPES,BLOBCOL,2004,BLOB,3072,3072,null,null,1,,null,2004,null,null,15,YES,null,null,null,null,NO
,APP,ALLTYPES,CLOBCOL,2005,CLOB,3072,6144,null,null,1,,null,2005,null,null,16,YES,null,null,null,null,NO
,APP,ALLTYPES,DATECOL,91,DATE,10,6,null,2,1,,null,9,1,null,17,YES,null,null,null,null,NO
,APP,ALLTYPES,TIMECOL,92,TIME,8,6,0,2,1,,null,9,2,null,18,YES,null,null,null,null,NO
,APP,ALLTYPES,TSCOL,93,TIMESTAMP,26,16,6,2,1,,null,9,3,null,19,YES,null,null,null,null,NO
getColumns('LOUIE'):
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SCOPE_CATLOG[VARCHAR],SCOPE_SCHEMA[VARCHAR],SCOPE_TABLE[VARCHAR],SOURCE_DATA_TYPE[SMALLINT],IS_AUTOINCREMENT[VARCHAR]
,APP,LOUIE,I,4,INTEGER,10,4,0,10,0,,10,4,null,null,1,NO,null,null,null,null,NO
,APP,LOUIE,S,5,SMALLINT,5,2,0,10,0,,null,5,null,null,2,NO,null,null,null,null,NO
,APP,LOUIE,C30,1,CHAR,30,60,null,null,0,,null,1,null,60,3,NO,null,null,null,null,NO
,APP,LOUIE,VC10,12,VARCHAR,10,20,null,null,0,,'asdf',12,null,20,4,NO,null,null,null,null,NO
,APP,LOUIE,AI,-5,BIGINT,19,40,0,10,0,,AUTOINCREMENT: start -10 increment 2001,-5,null,null,5,NO,null,null,null,null,YES
getColumns('INFLIGHT'):
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SCOPE_CATLOG[VARCHAR],SCOPE_SCHEMA[VARCHAR],SCOPE_TABLE[VARCHAR],SOURCE_DATA_TYPE[SMALLINT],IS_AUTOINCREMENT[VARCHAR]
,APP,INFLIGHT,FLT_NUM,1,CHAR,20,40,null,null,0,,null,1,null,40,1,NO,null,null,null,null,NO
,APP,INFLIGHT,FLT_ORIGIN,1,CHAR,6,12,null,null,1,,null,1,null,12,2,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_DEST,1,CHAR,6,12,null,null,1,,null,1,null,12,3,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_AIRCRAFT,1,CHAR,20,40,null,null,1,,null,1,null,40,4,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_FLYING_TIME,12,VARCHAR,22,44,null,null,1,,null,12,null,44,5,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_DEPT_TIME,1,CHAR,8,16,null,null,1,,null,1,null,16,6,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_ARR_TIME,1,CHAR,8,16,null,null,1,,null,1,null,16,7,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_NOTES,12,VARCHAR,510,1020,null,null,1,,null,12,null,1020,8,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_DAYS_OF_WK,1,CHAR,14,28,null,null,1,,null,1,null,28,9,YES,null,null,null,null,NO
,APP,INFLIGHT,FLT_CRAFT_PIC,12,VARCHAR,32672,65344,null,null,1,,null,12,null,65344,10,YES,null,null,null,null,NO
getColumnPrivileges():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],GRANTOR[VARCHAR],GRANTEE[VARCHAR],PRIVILEGE[VARCHAR],IS_GRANTABLE[VARCHAR]
getTablePrivileges():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],GRANTOR[VARCHAR],GRANTEE[VARCHAR],PRIVILEGE[VARCHAR],IS_GRANTABLE[VARCHAR]
getBestRowIdentifier("",null,"LOUIE"):
SCOPE[SMALLINT],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],PSEUDO_COLUMN[SMALLINT]
2,I,4,INTEGER,4,4,10,1
2,VC10,12,VARCHAR,10,20,null,1
getBestRowIdentifier("","SYS","SYSTABLES"):
SCOPE[SMALLINT],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],PSEUDO_COLUMN[SMALLINT]
2,TABLEID,1,CHAR,36,72,null,1
getVersionColumns():
SCOPE[SMALLINT],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],PSEUDO_COLUMN[SMALLINT]
getPrimaryKeys():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],PK_NAME[VARCHAR]
,APP,LOUIE,I,2,PRIMKEY
,APP,LOUIE,VC10,1,PRIMKEY
getPrimaryKeys(null, null, tablename):
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],PK_NAME[VARCHAR]
,APP,LOUIE,I,2,PRIMKEY
,APP,LOUIE,VC10,1,PRIMKEY
getImportedKeys():
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB2,T2_VC10,1,3,3,T2_FKEY1,PRIMKEY,7
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB2,T2_I,2,3,3,T2_FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,REFTAB,DPRIM,,APP,REFTAB,DFOR,1,3,3,FKEYSELF,PKEY_REFTAB,7
getExportedKeys():
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
,APP,REFTAB,DPRIM,,APP,REFTAB,DFOR,1,3,3,FKEYSELF,PKEY_REFTAB,7
,APP,LOUIE,VC10,,APP,REFTAB2,T2_VC10,1,3,3,T2_FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB2,T2_I,2,3,3,T2_FKEY1,PRIMKEY,7
---------------------------------------
getCrossReference('',null,'louie','',null,'reftab' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
getCrossReference('','APP','reftab','',null,'reftab' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFTAB,DPRIM,,APP,REFTAB,DFOR,1,3,3,FKEYSELF,PKEY_REFTAB,7
getCrossReference('',null,null,'','APP','reftab' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
,APP,REFTAB,DPRIM,,APP,REFTAB,DFOR,1,3,3,FKEYSELF,PKEY_REFTAB,7
getImportedKeys('',null,null,'','APP','reftab' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,REFTAB,DPRIM,,APP,REFTAB,DFOR,1,3,3,FKEYSELF,PKEY_REFTAB,7
getCrossReference('',null,'louie','','APP',null):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,VC10,,APP,REFTAB2,T2_VC10,1,3,3,T2_FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB2,T2_I,2,3,3,T2_FKEY1,PRIMKEY,7
getExportedKeys('',null,'louie,'','APP',null ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,LOUIE,VC10,,APP,REFTAB,VC10,1,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB,I,2,3,3,FKEY1,PRIMKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S2,2,3,3,FKEY2,UNIQUEKEY,7
,APP,LOUIE,C30,,APP,REFTAB,C30,1,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,S,,APP,REFTAB,S,2,3,3,FKEY3,UNIQUEKEY,7
,APP,LOUIE,VC10,,APP,REFTAB2,T2_VC10,1,3,3,T2_FKEY1,PRIMKEY,7
,APP,LOUIE,I,,APP,REFTAB2,T2_I,2,3,3,T2_FKEY1,PRIMKEY,7
getCrossReference('','badschema','LOUIE','','APP','REFTAB' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
getTypeInfo():
TYPE_NAME[VARCHAR],DATA_TYPE[SMALLINT],COLUMN_SIZE[INTEGER],LITERAL_PREFIX[VARCHAR],LITERAL_SUFFIX[VARCHAR],CREATE_PARAMS[VARCHAR],NULLABLE[SMALLINT],CASE_SENSITIVE[SMALLINT],SEARCHABLE[SMALLINT],UNSIGNED_ATTRIBUTE[SMALLINT],FIXED_PREC_SCALE[SMALLINT],AUTO_UNIQUE_VAL[SMALLINT],LOCAL_TYPE_NAME[VARCHAR],MINIMUM_SCALE[SMALLINT],MAXIMUM_SCALE[SMALLINT],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],NUM_PREC_RADIX[INTEGER],INTERVAL_PRECISION[SMALLINT]
BIGINT,-5,19,null,null,null,1,0,2,0,0,1,BIGINT,0,0,-5,null,10,null
LONG VARCHAR FOR BIT DATA,-4,32700,X',',null,1,0,2,null,0,null,LONG VARCHAR FOR BIT DATA,null,null,-4,null,null,null
VARCHAR () FOR BIT DATA,-3,32762,X',',length,1,0,2,null,0,null,VARCHAR () FOR BIT DATA,null,null,-3,null,null,null
CHAR () FOR BIT DATA,-2,254,X',',length,1,0,2,null,0,null,CHAR () FOR BIT DATA,null,null,-2,null,null,null
LONG VARCHAR,-1,32700,',',null,1,1,3,null,0,null,LONG VARCHAR,null,null,-1,null,null,null
LONG NVARCHAR,-1,32700,',',null,1,1,3,null,0,null,LONG NVARCHAR,null,null,-1,null,null,null
CHAR,1,254,',',length,1,1,3,null,0,null,CHAR,null,null,1,null,null,null
NATIONAL CHAR,1,2147483647,',',length,1,1,3,null,0,null,NATIONAL CHAR,null,null,1,null,null,null
NUMERIC,2,31,null,null,precision,scale,1,0,2,0,1,0,NUMERIC,0,32767,2,null,10,null
DECIMAL,3,31,null,null,precision,scale,1,0,2,0,1,0,DECIMAL,0,32767,3,null,10,null
INTEGER,4,10,null,null,null,1,0,2,0,0,1,INTEGER,0,0,4,null,10,null
SMALLINT,5,5,null,null,null,1,0,2,0,0,1,SMALLINT,0,0,5,null,10,null
FLOAT,6,52,null,null,precision,1,0,2,0,0,0,FLOAT,null,null,6,null,2,null
REAL,7,23,null,null,null,1,0,2,0,0,0,REAL,null,null,7,null,2,null
DOUBLE,8,52,null,null,null,1,0,2,0,0,0,DOUBLE,null,null,8,null,2,null
VARCHAR,12,32672,',',length,1,1,3,null,0,null,VARCHAR,null,null,12,null,null,null
NATIONAL CHAR VARYING,12,2147483647,',',length,1,1,3,null,0,null,NATIONAL CHAR VARYING,null,null,12,null,null,null
DATE,91,10,DATE',',null,1,0,2,1,0,0,DATE,0,0,9,1,2,null
TIME,92,8,TIME',',null,1,0,2,1,0,0,TIME,0,0,9,2,2,null
TIMESTAMP,93,26,TIMESTAMP',',null,1,0,2,1,0,0,TIMESTAMP,0,6,9,3,2,null
BLOB,2004,2147483647,null,null,length,1,0,1,null,0,null,BLOB,null,null,2004,null,null,null
CLOB,2005,2147483647,',',length,1,1,1,null,0,null,CLOB,null,null,2005,null,null,null
getIndexInfo():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],NON_UNIQUE[SMALLINT],INDEX_QUALIFIER[VARCHAR],INDEX_NAME[VARCHAR],TYPE[SMALLINT],ORDINAL_POSITION[SMALLINT],COLUMN_NAME[VARCHAR],ASC_OR_DESC[CHAR],CARDINALITY[INTEGER],PAGES[INTEGER],FILTER_CONDITION[VARCHAR]
,SYS,SYSCOLUMNS,0,,SYSCOLUMNS_INDEX1,3,1,REFERENCEID,A,null,null,null
,SYS,SYSCOLUMNS,0,,SYSCOLUMNS_INDEX1,3,2,COLUMNNAME,A,null,null,null
getIndexInfo():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],NON_UNIQUE[SMALLINT],INDEX_QUALIFIER[VARCHAR],INDEX_NAME[VARCHAR],TYPE[SMALLINT],ORDINAL_POSITION[SMALLINT],COLUMN_NAME[VARCHAR],ASC_OR_DESC[CHAR],CARDINALITY[INTEGER],PAGES[INTEGER],FILTER_CONDITION[VARCHAR]
,SYS,SYSCOLUMNS,0,,SYSCOLUMNS_INDEX1,3,1,REFERENCEID,A,null,null,null
,SYS,SYSCOLUMNS,0,,SYSCOLUMNS_INDEX1,3,2,COLUMNNAME,A,null,null,null
,SYS,SYSCOLUMNS,1,,SYSCOLUMNS_INDEX2,3,1,COLUMNDEFAULTID,A,null,null,null
getIndexInfo():
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],NON_UNIQUE[SMALLINT],INDEX_QUALIFIER[VARCHAR],INDEX_NAME[VARCHAR],TYPE[SMALLINT],ORDINAL_POSITION[SMALLINT],COLUMN_NAME[VARCHAR],ASC_OR_DESC[CHAR],CARDINALITY[INTEGER],PAGES[INTEGER],FILTER_CONDITION[VARCHAR]
,SYS,SYSTABLES,0,,SYSTABLES_INDEX1,3,1,TABLENAME,A,null,null,null
,SYS,SYSTABLES,0,,SYSTABLES_INDEX1,3,2,SCHEMAID,A,null,null,null
,SYS,SYSTABLES,0,,SYSTABLES_INDEX2,3,1,TABLEID,A,null,null,null
getColumns('SYSTABLES'):
TABLE_CAT[VARCHAR],TABLE_SCHEM[VARCHAR],TABLE_NAME[VARCHAR],COLUMN_NAME[VARCHAR],DATA_TYPE[SMALLINT],TYPE_NAME[VARCHAR],COLUMN_SIZE[INTEGER],BUFFER_LENGTH[INTEGER],DECIMAL_DIGITS[SMALLINT],NUM_PREC_RADIX[SMALLINT],NULLABLE[SMALLINT],REMARKS[VARCHAR],COLUMN_DEF[VARCHAR],SQL_DATA_TYPE[SMALLINT],SQL_DATETIME_SUB[SMALLINT],CHAR_OCTET_LENGTH[INTEGER],ORDINAL_POSITION[INTEGER],IS_NULLABLE[VARCHAR],SCOPE_CATLOG[VARCHAR],SCOPE_SCHEMA[VARCHAR],SCOPE_TABLE[VARCHAR],SOURCE_DATA_TYPE[SMALLINT],IS_AUTOINCREMENT[VARCHAR]
,SYS,SYSTABLES,TABLEID,1,CHAR,36,72,null,null,0,,null,1,null,72,1,NO,null,null,null,null,NO
,SYS,SYSTABLES,TABLENAME,12,VARCHAR,128,256,null,null,0,,null,12,null,256,2,NO,null,null,null,null,NO
,SYS,SYSTABLES,TABLETYPE,1,CHAR,1,2,null,null,0,,null,1,null,2,3,NO,null,null,null,null,NO
,SYS,SYSTABLES,SCHEMAID,1,CHAR,36,72,null,null,0,,null,1,null,72,4,NO,null,null,null,null,NO
,SYS,SYSTABLES,LOCKGRANULARITY,1,CHAR,1,2,null,null,0,,null,1,null,2,5,NO,null,null,null,null,NO
OK -- user result set closed by intervening OBDC getColumns request; this was expected because of the way the test works.
Test escaped numeric functions - JDBC 3.0 C.1
TEST FUNCTIONS DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn ABS(-25.67) } --   = >25.67<  << 
Executing VALUES { fn ACOS(0.0707) } --   = >1.50<  << 
Executing VALUES { fn ASIN(0.997) } --   = >1.49<  << 
Executing VALUES { fn ATAN(14.10) } --   = >1.49<  << 
Executing VALUES { fn CEILING(3.45) } --   = >4.0<  << 
Executing VALUES { fn COS(1.2) } --   = >0.36<  << 
Executing VALUES { fn COT(3.4) } --   = >3.78<  << 
Executing VALUES { fn DEGREES(2.1) } --   = >120.<  << 
Executing VALUES { fn EXP(2.3) } --   = >9.97<  << 
Executing VALUES { fn FLOOR(3.22) } --   = >3.0<  << 
Executing VALUES { fn LOG(34.1) } --   = >3.52<  << 
Executing VALUES { fn LOG10(18.7) } --   = >1.27<  << 
Executing VALUES { fn MOD(124, 7) } --   = >5<  << 
Executing VALUES { fn PI() } --   = >3.14<  << 
Executing VALUES { fn RADIANS(54) } --   = >0.94<  << 
Executing VALUES { fn RAND(17) } --   = >0.73<  << 
Executing VALUES { fn SIGN(-34) } --   = >-1<  << 
Executing VALUES { fn SIN(0.32) } --   = >0.31<  << 
Executing VALUES { fn SQRT(6.22) } --   = >2.49<  << 
Executing VALUES { fn TAN(0.57) } --   = >0.64<  << 
TEST FUNCTIONS NOT DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn ATAN2(0.56, 1.2) } -- 
SQLSTATE(42X01): Syntax error: Encountered "ATAN2" at line 1, column 13.
Executing VALUES { fn POWER(2, 3) } -- 
SQLSTATE(42X01): Syntax error: Encountered "POWER" at line 1, column 13.
Executing VALUES { fn ROUND(345.345, 1) } -- 
SQLSTATE(42X01): Syntax error: Encountered "ROUND" at line 1, column 13.
Executing VALUES { fn TRUNCATE(345.395, 1) } -- 
SQLSTATE(42X01): Syntax error: Encountered "TRUNCATE" at line 1, column 13.
Test escaped string functions - JDBC 3.0 C.2
TEST FUNCTIONS DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn CONCAT('hello', 'there') } --   = >hellothere<  << 
Executing VALUES { fn LENGTH('four    ') } --   = >4<  << 
Executing VALUES { fn LCASE('Fernando Alonso') } --   = >fernando alonso<  << 
Executing VALUES { fn LOCATE('jour', 'Bonjour') } --   = >4<  << 
Executing VALUES { fn LTRIM('   left trim   ') } --   = >left trim   <  << 
Executing VALUES { fn RTRIM('  right trim   ') } --   = >  right trim<  << 
Executing VALUES { fn SUBSTRING('Ruby the Rubicon Jeep', 10, 7) } --   = >Rubicon<  << 
Executing VALUES { fn UCASE('Fernando Alonso') } --   = >FERNANDO ALONSO<  << 
TEST FUNCTIONS NOT DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn ASCII('Yellow') } -- 
SQLSTATE(42X01): Syntax error: Encountered "ASCII" at line 1, column 13.
Executing VALUES { fn CHAR(65) } --   = >65         <  << 
FAIL function works but not declared in list: CHAR
Executing VALUES { fn DIFFERENCE('Pires', 'Piers') } -- 
SQLSTATE(42X01): Syntax error: Encountered "DIFFERENCE" at line 1, column 13.
Executing VALUES { fn INSERT('Bill Clinton', 4, 'William') } -- 
SQLSTATE(42X01): Syntax error: Encountered "INSERT" at line 1, column 13.
Executing VALUES { fn LEFT('Bonjour', 3) } -- 
SQLSTATE(42X01): Syntax error: Encountered "LEFT" at line 1, column 13.
Executing VALUES { fn REPEAT('echo', 3) } -- 
SQLSTATE(42X01): Syntax error: Encountered "REPEAT" at line 1, column 13.
Executing VALUES { fn REPLACE('to be or not to be', 'be', 'England') } -- 
SQLSTATE(42X01): Syntax error: Encountered "REPLACE" at line 1, column 13.
Executing VALUES { fn SOUNDEX('Derby') } -- 
SQLSTATE(42X01): Syntax error: Encountered "SOUNDEX" at line 1, column 13.
Executing VALUES { fn SPACE(12) } -- 
SQLSTATE(42X01): Syntax error: Encountered "SPACE" at line 1, column 13.
Test escaped date time functions - JDBC 3.0 C.3
TEST FUNCTIONS DECLARED IN DATABASEMETADATA LIST
Executing VALUES CASE WHEN { fn CURDATE()} = CURRENT_DATE THEN 'OK' ELSE 'wrong' END --   = >OK<  << 
Executing VALUES CASE WHEN { fn CURTIME()} = CURRENT_TIME THEN 'OK' ELSE 'wrong' END --   = >OK<  << 
Executing VALUES { fn HOUR({t '16:13:03'}) } --   = >16<  << 
Executing VALUES { fn MINUTE({t '16:13:03'}) } --   = >13<  << 
Executing VALUES { fn MONTH({d '1995-12-19'}) } --   = >12<  << 
Executing VALUES { fn SECOND({t '16:13:03'}) } --   = >3<  << 
Executing VALUES { fn TIMESTAMPADD(SQL_TSI_DAY, 7, {ts 'xxxxxxFILTERED-TIMESTAMPxxxxx}) } --   = >xxxxxxFILTERED-TIMESTAMPxxxxx<  << 
Executing VALUES { fn TIMESTAMPDIFF(SQL_TSI_DAY, {ts 'xxxxxxFILTERED-TIMESTAMPxxxxx}, {ts 'xxxxxxFILTERED-TIMESTAMPxxxxx}) } --   = >683<  << 
Executing VALUES { fn YEAR({d '1995-12-19'}) } --   = >1995<  << 
TEST FUNCTIONS NOT DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn DAYNAME({d '1995-12-19'h}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "DAYNAME" at line 1, column 13.
Executing VALUES { fn DAYOFMONTH({d '1995-12-19'}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "DAYOFMONTH" at line 1, column 13.
Executing VALUES { fn DAYOFWEEK({d '1995-12-19'}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "DAYOFWEEK" at line 1, column 13.
Executing VALUES { fn DAYOFYEAR({d '1995-12-19'}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "DAYOFYEAR" at line 1, column 13.
Executing VALUES { fn MONTHNAME({d '1995-12-19'}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "MONTHNAME" at line 1, column 13.
Executing VALUES CASE WHEN { fn NOW()} = CURRENT_TIMESTAMP THEN 'OK' ELSE 'wrong' END -- 
SQLSTATE(42X01): Syntax error: Encountered "NOW" at line 1, column 23.
Executing VALUES { fn QUARTER({d '1995-12-19'}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "QUARTER" at line 1, column 13.
Executing VALUES { fn WEEK({d '1995-12-19'}) } -- 
SQLSTATE(42X01): Syntax error: Encountered "WEEK" at line 1, column 13.
Test escaped system functions - JDBC 3.0 C.4
TEST FUNCTIONS DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn USER() } --   = >APP<  << 
TEST FUNCTIONS NOT DECLARED IN DATABASEMETADATA LIST
Executing VALUES { fn DATABASE() } -- 
SQLSTATE(42X01): Syntax error: Encountered "DATABASE" at line 1, column 13.
Executing VALUES { fn IFNULL('this', 'that') } -- 
SQLSTATE(42X01): Syntax error: Encountered "IFNULL" at line 1, column 13.
---------------------------------------
Referential action values
RESTRICT = 1
NO ACTION = 3
CASCADE = 0
SETNULL = 2
SETDEFAULT = 4
getCrossReference('','APP','REFACTION1','','APP','REFACTIONNONE' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTNONE,A,1,3,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getCrossReference('','APP','REFACTION1','','APP','REFACTRESTRICT' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTRESTRICT,A,1,3,1,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getCrossReference('','APP','REFACTION1','','APP','REFACTNOACTION' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTNOACTION,A,1,3,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getCrossReference('','APP','REFACTION1','','APP','REFACTCASCADE' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTCASCADE,A,1,3,0,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getCrossReference('','APP','REFACTION1','','APP','REFACTSETNULL' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTSETNULL,A,1,3,2,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getCrossReference('','APP','REFACTION1','','APP','REFACTUPDRESTRICT' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTUPDRESTRICT,A,1,1,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getCrossReference('','APP','REFACTION1','','APP','REFACTUPDNOACTION' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTUPDNOACTION,A,1,3,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
getImportedKeys - none update Passed
getImportedKeys - none delete Passed
getImportedKeys - delete Restrict Passed
getImportedKeys - delete NO ACTION Passed
getImportedKeys - delete CASCADE Passed
getImportedKeys - delete SET NULL Passed
getImportedKeys - update Restrict Passed
getImportedKeys - update NO ACTION Passed
getExportedKeys('',null,null,'','APP','REFACTION1' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,REFACTION1,A,,APP,REFACTCASCADE,A,1,3,0,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
,APP,REFACTION1,A,,APP,REFACTNOACTION,A,1,3,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
,APP,REFACTION1,A,,APP,REFACTNONE,A,1,3,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
,APP,REFACTION1,A,,APP,REFACTRESTRICT,A,1,3,1,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
,APP,REFACTION1,A,,APP,REFACTSETNULL,A,1,3,2,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
,APP,REFACTION1,A,,APP,REFACTUPDNOACTION,A,1,3,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
,APP,REFACTION1,A,,APP,REFACTUPDRESTRICT,A,1,1,3,xxxxGENERATED-IDxxxx,xxxxGENERATED-IDxxxx,7
---------------------------------------
getColumns for 'T1'
  Next line is real null.
defval for col C1 type INTEGER DEFAULT 'null' wasnull true
  Next line is real null.
defval for col C2 type INTEGER DEFAULT 'null' wasnull true
defval for col C3 type INTEGER DEFAULT 'NULL' wasnull false
  Next line is real null.
defval for col C4 type CHAR DEFAULT 'null' wasnull true
defval for col C5 type CHAR DEFAULT 'NULL' wasnull false
defval for col C6 type CHAR DEFAULT ''NULL'' wasnull false
defval for col C7 type INTEGER DEFAULT '88' wasnull false
getImportedKeys('',null,null,'','APP','Derby655t1' ):
PKTABLE_CAT[VARCHAR],PKTABLE_SCHEM[VARCHAR],PKTABLE_NAME[VARCHAR],PKCOLUMN_NAME[VARCHAR],FKTABLE_CAT[VARCHAR],FKTABLE_SCHEM[VARCHAR],FKTABLE_NAME[VARCHAR],FKCOLUMN_NAME[VARCHAR],KEY_SEQ[SMALLINT],UPDATE_RULE[SMALLINT],DELETE_RULE[SMALLINT],FK_NAME[VARCHAR],PK_NAME[VARCHAR],DEFERRABILITY[SMALLINT]
,APP,DERBY655T2,C21_ID,,APP,DERBY655T1,C11_ID,1,3,0,F_12,xxxxGENERATED-IDxxxx,7
Test metadata finished
