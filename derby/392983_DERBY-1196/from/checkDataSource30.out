Running JDBC 3.0 connection checks on DriverManager 
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on DriverManager 
  isolation level 2
  auto commit     true
  read only       false
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
method calls on a closed connection
DriverManager  <closedconn>.close() no error
DriverManager  <closedconn>.createStatement() 08003 - No current connection.
DriverManager  <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on DataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on DataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
method calls on a closed connection
DataSource <closedconn>.close() no error
DataSource <closedconn>.createStatement() 08003 - No current connection.
DataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on ConnectionPoolDataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on ConnectionPoolDataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(1):connectionClosed
method calls on a closed connection
ConnectionPoolDataSource <closedconn>.close() no error
ConnectionPoolDataSource <closedconn>.createStatement() 08003 - No current connection.
ConnectionPoolDataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on ConnectionPoolDataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on ConnectionPoolDataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(1):connectionClosed
method calls on a closed connection
ConnectionPoolDataSource <closedconn>.close() no error
ConnectionPoolDataSource <closedconn>.createStatement() 08003 - No current connection.
ConnectionPoolDataSource <closedstmt>.execute() null - Invalid operation: statement closed
Changes rolled back OK in auto closed pooled connection
EVENT(1):connectionClosed
expected java.sql.SQLException: Invalid operation: result set closed
expected java.sql.SQLException: Invalid operation: statement closed
Start testPoolReset ConnectionPoolDataSource
IDENTITY_VAL_LOCAL=1
IDENTITY_VAL_LOCAL=2
IDENTITY_VAL_LOCAL=3
End testPoolReset ConnectionPoolDataSource
Running JDBC 3.0 connection checks on XADataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on XADataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(3):connectionClosed
method calls on a closed connection
XADataSource <closedconn>.close() no error
XADataSource <closedconn>.createStatement() 08003 - No current connection.
XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Changes rolled back OK in auto closed local XAConnection
EVENT(3):connectionClosed
Start testPoolReset XADataSource
IDENTITY_VAL_LOCAL=1
IDENTITY_VAL_LOCAL=2
IDENTITY_VAL_LOCAL=3
End testPoolReset XADataSource
ERROR XJ015: DERBY SQL error: SQLCODE: -1, SQLSTATE: XJ015, SQLERRMC: Derby system shutdown.
Running JDBC 3.0 connection checks on DriverManager 
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on DriverManager 
  isolation level 2
  auto commit     true
  read only       false
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
method calls on a closed connection
DriverManager  <closedconn>.close() no error
DriverManager  <closedconn>.createStatement() 08003 - No current connection.
DriverManager  <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on DataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on DataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
method calls on a closed connection
DataSource <closedconn>.close() no error
DataSource <closedconn>.createStatement() 08003 - No current connection.
DataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on ConnectionPoolDataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on ConnectionPoolDataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(2):connectionClosed
method calls on a closed connection
ConnectionPoolDataSource <closedconn>.close() no error
ConnectionPoolDataSource <closedconn>.createStatement() 08003 - No current connection.
ConnectionPoolDataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on ConnectionPoolDataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on ConnectionPoolDataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(2):connectionClosed
method calls on a closed connection
ConnectionPoolDataSource <closedconn>.close() no error
ConnectionPoolDataSource <closedconn>.createStatement() 08003 - No current connection.
ConnectionPoolDataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on XADataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on XADataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(4):connectionClosed
method calls on a closed connection
XADataSource <closedconn>.close() no error
XADataSource <closedconn>.createStatement() 08003 - No current connection.
XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on XADataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on XADataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(4):connectionClosed
method calls on a closed connection
XADataSource <closedconn>.close() no error
XADataSource <closedconn>.createStatement() 08003 - No current connection.
XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
EVENT(5):connectionClosed
Running JDBC 3.0 connection checks on Global XADataSource
  holdability     false
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on Global XADataSource
  isolation level 2
  auto commit     false
  read only       false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(5):connectionClosed
method calls on a closed connection
Global XADataSource <closedconn>.close() no error
Global XADataSource <closedconn>.createStatement() 08003 - No current connection.
Global XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on Global XADataSource
  holdability     false
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on Global XADataSource
  isolation level 2
  auto commit     false
  read only       false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(5):connectionClosed
method calls on a closed connection
Global XADataSource <closedconn>.close() no error
Global XADataSource <closedconn>.createStatement() 08003 - No current connection.
Global XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on Switch to local XADataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on Switch to local XADataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(5):connectionClosed
method calls on a closed connection
Switch to local XADataSource <closedconn>.close() no error
Switch to local XADataSource <closedconn>.createStatement() 08003 - No current connection.
Switch to local XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on Switch to local XADataSource
  holdability     true
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on Switch to local XADataSource
  isolation level 2
  auto commit     true
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(5):connectionClosed
method calls on a closed connection
Switch to local XADataSource <closedconn>.close() no error
Switch to local XADataSource <closedconn>.createStatement() 08003 - No current connection.
Switch to local XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on Switch to global XADataSource
  holdability     false
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on Switch to global XADataSource
  isolation level 2
  auto commit     false
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(5):connectionClosed
method calls on a closed connection
Switch to global XADataSource <closedconn>.close() no error
Switch to global XADataSource <closedconn>.createStatement() 08003 - No current connection.
Switch to global XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
Running JDBC 3.0 connection checks on Switch to global XADataSource
  holdability     false
JDBC 3.0 savepoint java.sql.SQLException: Cannot issue savepoint when autoCommit is on.
Running connection checks on Switch to global XADataSource
  isolation level 2
  auto commit     false
  read only       false
  has warnings    false
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for Statement.getConnection()
FAIL incorrect connection object returned for DatabaseMetaData.getConnection()
setTypeMap(EMPTY_MAP) - FAIL 0A000 - Feature not implemented: setTypeMap.
setTypeMap(null) - ok 0A000 - Feature not implemented: setTypeMap.
setTypeMap(map) - ok 0A000 - Feature not implemented: setTypeMap.
EVENT(5):connectionClosed
method calls on a closed connection
Switch to global XADataSource <closedconn>.close() no error
Switch to global XADataSource <closedconn>.createStatement() 08003 - No current connection.
Switch to global XADataSource <closedstmt>.execute() null - Invalid operation: statement closed
initial local
  holdability     true
  isolation level READ_COMMITTED
  auto commit     true
  read only       false
initial  X1
  holdability     false
  isolation level READ_COMMITTED
  auto commit     false
  read only       false
modified X1
  holdability     false
  isolation level READ_UNCOMMITTED
  auto commit     false
  read only       false
modified local
  holdability     false
  isolation level READ_UNCOMMITTED
  auto commit     true
  read only       false
reset local
  holdability     false
  isolation level READ_COMMITTED
  auto commit     true
  read only       false
back to local (same as reset)
  holdability     false
  isolation level READ_COMMITTED
  auto commit     true
  read only       false
EVENT(6):connectionClosed
new handle - local 
  holdability     true
  isolation level READ_COMMITTED
  auto commit     true
  read only       false
EVENT(6):connectionClosed
EVENT(6):connectionClosed
pre-X1 commit - local
  holdability     true
  isolation level REPEATABLE_READ
  auto commit     true
  read only       false
post-X1 end - local
  holdability     true
  isolation level REPEATABLE_READ
  auto commit     true
  read only       false
post-X1 commit - local
  holdability     true
  isolation level REPEATABLE_READ
  auto commit     true
  read only       false
EVENT(6):connectionClosed
Some more isolation testing using SQL and JDBC api
initial local
  holdability     true
  isolation level READ_COMMITTED
  auto commit     true
  read only       false
Issue setTransactionIsolation in local transaction
setTransactionIsolation in local
  holdability     true
  isolation level READ_UNCOMMITTED
  auto commit     true
  read only       false
TESTING RE_USE OF STATEMENT OBJECTS
LOCK TABLE
END LOCK TABLE
Statement State @ Create 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 444
  getMaxFieldSize() 713
  getMaxRows() 19
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
Statement State @ PS Create 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 888
  getMaxFieldSize() 317
  getMaxRows() 91
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 1
    1 type 4
Statement State @ CS Create 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 999
  getMaxFieldSize() 137
  getMaxRows() 85
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 2
    1 type 12
    2 type 12
Params-local-1: ru(params) contents {3}
sru1-local-1: mismatched Statement connection
sru1-local-1: ru(SN1) contents {1} {2} {3}
Expecting downgrade because global transaction sru1-global-2 is using a statement with holdability true
sru1-global-2: mismatched Statement connection
sru1-global-2: ru(SQL_CURLH000C) contents {1} {2} {3}
sru2-global-3: mismatched Statement connection
sru2-global-3: ru(OAK2) contents {1} {2} {3}
Expecting downgrade because global transaction sru1-global-4 is using a statement with holdability true
sru1-global-4: mismatched Statement connection
sru1-global-4: ru(SQL_CURLH000C) contents {1} {2} {3}
Statement State @ GLOBAL 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 444
  getMaxFieldSize() 713
  getMaxRows() 19
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
Statement State @ PS GLOBAL 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 888
  getMaxFieldSize() 317
  getMaxRows() 91
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 1
    1 type 4
Statement State @ CS GLOBAL 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 999
  getMaxFieldSize() 137
  getMaxRows() 85
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 2
    1 type 12
    2 type 12
Params-global-1: ru(SQL_CURLH000C) contents {3}
sru1-local-5: mismatched Statement connection
sru1-local-5: ru(SQL_CURLH000C) contents {1} {2} {3}
sru2-local-6: mismatched Statement connection
sru2-local-6: ru(SQL_CURLN000C) contents {1} {2} {3}
sru3-local-7: mismatched Statement connection
sru3-local-7: ru(SF3) contents {1} {2} {3}
Statement State @ LOCAL 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 444
  getMaxFieldSize() 713
  getMaxRows() 19
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
Statement State @ PS LOCAL 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 888
  getMaxFieldSize() 317
  getMaxRows() 91
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 1
    1 type 4
Statement State @ CS LOCAL 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 999
  getMaxFieldSize() 137
  getMaxRows() 85
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 2
    1 type 12
    2 type 12
LOCK TABLE
  xid row 0 lock count 14
  xid row 1 lock count 12
END LOCK TABLE
sru1-local-8: mismatched Statement connection
sru1-local-8: ru(SQL_CURLH000C) contents {1} {2} {3}
sru2-local-9: mismatched Statement connection
sru2-local-9: ru(SQL_CURLN000C) contents {1} {2} {3}
sru3-local-10: mismatched Statement connection
sru3-local-10: ru(SQL_CURLH000C) contents {1} {2} {3}
Statement State @ LOCAL 2 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 444
  getMaxFieldSize() 713
  getMaxRows() 19
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
Statement State @ PS LOCAL 2 
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 888
  getMaxFieldSize() 317
  getMaxRows() 91
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 1
    1 type 4
Statement State @ CS LOCAL 2
  getResultSetType() SCROLL_INSENSITIVE
  getResultSetConcurrency() READ_ONLY
  getFetchDirection() REVERSE
  getFetchSize() 999
  getMaxFieldSize() 137
  getMaxRows() 85
  getResultSetHoldability() HOLD_CURSORS_OVER_COMMIT 
  Parameter Count 2
    1 type 12
    2 type 12
LOCK TABLE
  xid row 0 lock count 14
  xid row 1 lock count 12
END LOCK TABLE
sruBatch update counts : 1  1  2  1 :
sruBatch: mismatched Statement connection
sruBatch: ru(SQL_CURLH000C) contents {1} {2} {3} {4} {5} {6} {7} {8}
XAConnection.getConnection : getConnection() is not valid on a closed PooledConnection.
XAResource.start : XAException - XAER_RMFAIL : Connection is Closed.
XAResource.end : XAException - XAER_RMFAIL : Connection is Closed.
XAResource.commit : XAException - XAER_RMFAIL : Connection is Closed.
XAResource.prepare : XAException - XAER_RMFAIL : Connection is Closed.
XAResource.recover : XAException - XAER_RMFAIL : Connection is Closed.
XAResource.prepare : XAException - XAER_RMFAIL : Connection is Closed.
XAResource.isSameRM : XAException - XAER_RMFAIL : Connection is Closed.
Patricio update count 1
testing jira 95 for DataSource; ok - expected exception: XCY00
testing jira 95 for XADataSource; ok - expected exception: XCY00
START XA HOLDABILITY TEST
By default, autocommit is true for a connection
Default holdability for a connection is HOLD_CURSORS_OVER_COMMIT
CONNECTION(not in xa transaction yet) HOLDABILITY true
Notice that autocommit now is false for connection because it is part of the global transaction
Autocommit on Connection inside global transaction has been set correctly to false
CONNECTION(non-xa) HOLDABILITY false
STATEMENT HOLDABILITY false
STATEMENT HOLDABILITY false
STATEMENT HOLDABILITY true
PREPARED STATEMENT HOLDABILITY true
CALLABLE STATEMENT HOLDABILITY true
H@1 id 1
H@2 id 2
H@3 id 3
CONNECTION(xa) HOLDABILITY false
STATEMENT(this one was created with holdability false, outside the global transaction. Check it's holdability inside global transaction) HOLDABILITY false
STATEMENT(this one was created with holdability true, outside the global transaction. Check it's holdability inside global transaction) HOLDABILITY true
STATEMENT(this one was created with default holdability inside this global transaction. Check it's holdability) HOLDABILITY false
PREPAREDSTATEMENT(this one was created with default holdability inside this global transaction. Check it's holdability) HOLDABILITY false
CALLABLESTATEMENT(this one was created with default holdability inside this global transaction. Check it's holdability) HOLDABILITY false
X@1 id 1
X@2 id 2
Expected SQLException No current connection. : 
Expected SQLException Invalid operation: result set closed
resume XA transaction and keep using rs
Check holdability of various jdbc objects after resuming XA transaction
CONNECTION(xa) HOLDABILITY false
STATEMENT(this one was created with holdability false, outside the global transaction. Check it's holdability inside global transaction) HOLDABILITY false
STATEMENT(this one was created with holdability true, outside the global transaction. Check it's holdability inside global transaction) HOLDABILITY true
STATEMENT(this one was created with default holdability inside the global transaction when it was first started. Check it's holdability) HOLDABILITY false
PREPAREDSTATEMENT(this one was created with default holdability inside the global transaction when it was first started. Check it's holdability) HOLDABILITY false
CALLABLESTATEMENT(this one was created with default holdability inside the global transaction when it was first started. Check it's holdability) HOLDABILITY false
STATEMENT(this one was created with default holdability after the global transaction was resumed. Check it's holdability) HOLDABILITY false
PREPAREDSTATEMENT(this one was created with default holdability after the global transaction was resumed. Check it's holdability) HOLDABILITY false
CALLABLESTATEMENT(this one was created with default holdability after the global transaction was resumed. Check it's holdability) HOLDABILITY false
Expected SQLException Invalid operation: result set closed
Expected SQLException Invalid operation: result set closed
Set connection to hold 
CONNECTION(held) HOLDABILITY true
**Test holdability state for: PooledConnection **
PASS: Holdability matches expected holdability:HOLD_CURSORS_OVER_COMMIT
** Test autoCommit state for: PooledConnection**
PASS: autoCommit reset on getConnection
done creating  table
*** Test isolation level reset on PooledConnection.getConnection()***
setTransactionIsolation(Connection.TRANSACTION_READ_UNCOMMITTED
PASS: No lock timeout occurs for READ_UNCOMMITTED
Get a new connection with PooledConnection.getConnection()
Isolation level should be reset to READ_COMMITTED
PASS: Expected lock timeout for READ_COMMITTED
done creating  table
*** Test isolation level reset on XAConnection.getConnection()***
setTransactionIsolation(Connection.TRANSACTION_READ_UNCOMMITTED
PASS: No lock timeout occurs for READ_UNCOMMITTED
Get a new connection with XAConnection.getConnection()
Isolation level should be reset to READ_COMMITTED
PASS: Expected lock timeout for READ_COMMITTED
Completed checkDataSource30
