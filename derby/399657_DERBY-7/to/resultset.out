Test resultset starting
getColumnCount(): 16
isAutoIncrement(1): false
isCaseSensitive(1): false
isSearchable(1): true
isCurrency(1): false
isNullable(1): 1
isSigned(1): true
getColumnDisplaySize(1): 11
getColumnLabel(1): I
getColumnName(1): I
getTableName(1): T
getSchemaName(1): APP
getCatalogName(1): 
getColumnType(1): 4
getPrecision(1): 10
getScale(1): 0
getColumnTypeName(1): INTEGER
isReadOnly(1): true
isDefinitelyWritable(1): false
isAutoIncrement(2): false
isCaseSensitive(2): false
isSearchable(2): true
isCurrency(2): false
isNullable(2): 1
isSigned(2): true
getColumnDisplaySize(2): 6
getColumnLabel(2): S
getColumnName(2): S
getTableName(2): T
getSchemaName(2): APP
getCatalogName(2): 
getColumnType(2): 5
getPrecision(2): 5
getScale(2): 0
getColumnTypeName(2): SMALLINT
isReadOnly(2): true
isDefinitelyWritable(2): false
isAutoIncrement(3): false
isCaseSensitive(3): false
isSearchable(3): true
isCurrency(3): false
isNullable(3): 1
isSigned(3): true
getColumnDisplaySize(3): 13
getColumnLabel(3): R
getColumnName(3): R
getTableName(3): T
getSchemaName(3): APP
getCatalogName(3): 
getColumnType(3): 7
getPrecision(3): 7
getScale(3): 0
getColumnTypeName(3): REAL
isReadOnly(3): true
isDefinitelyWritable(3): false
isAutoIncrement(4): false
isCaseSensitive(4): false
isSearchable(4): true
isCurrency(4): false
isNullable(4): 1
isSigned(4): true
getColumnDisplaySize(4): 22
getColumnLabel(4): D
getColumnName(4): D
getTableName(4): T
getSchemaName(4): APP
getCatalogName(4): 
getColumnType(4): 8
getPrecision(4): 15
getScale(4): 0
getColumnTypeName(4): DOUBLE
isReadOnly(4): true
isDefinitelyWritable(4): false
isAutoIncrement(5): false
isCaseSensitive(5): false
isSearchable(5): true
isCurrency(5): false
isNullable(5): 1
isSigned(5): false
getColumnDisplaySize(5): 10
getColumnLabel(5): DT
getColumnName(5): DT
getTableName(5): T
getSchemaName(5): APP
getCatalogName(5): 
getColumnType(5): 91
getPrecision(5): 10
getScale(5): 0
getColumnTypeName(5): DATE
isReadOnly(5): true
isDefinitelyWritable(5): false
isAutoIncrement(6): false
isCaseSensitive(6): false
isSearchable(6): true
isCurrency(6): false
isNullable(6): 1
isSigned(6): false
getColumnDisplaySize(6): 8
getColumnLabel(6): T
getColumnName(6): T
getTableName(6): T
getSchemaName(6): APP
getCatalogName(6): 
getColumnType(6): 92
getPrecision(6): 8
getScale(6): 0
getColumnTypeName(6): TIME
isReadOnly(6): true
isDefinitelyWritable(6): false
isAutoIncrement(7): false
isCaseSensitive(7): false
isSearchable(7): true
isCurrency(7): false
isNullable(7): 1
isSigned(7): false
getColumnDisplaySize(7): 26
getColumnLabel(7): TS
getColumnName(7): TS
getTableName(7): T
getSchemaName(7): APP
getCatalogName(7): 
getColumnType(7): 93
getPrecision(7): 26
getScale(7): 6
getColumnTypeName(7): TIMESTAMP
isReadOnly(7): true
isDefinitelyWritable(7): false
isAutoIncrement(8): false
isCaseSensitive(8): true
isSearchable(8): true
isCurrency(8): false
isNullable(8): 1
isSigned(8): false
getColumnDisplaySize(8): 10
getColumnLabel(8): C
getColumnName(8): C
getTableName(8): T
getSchemaName(8): APP
getCatalogName(8): 
getColumnType(8): 1
getPrecision(8): 10
getScale(8): 0
getColumnTypeName(8): CHAR
isReadOnly(8): true
isDefinitelyWritable(8): false
isAutoIncrement(9): false
isCaseSensitive(9): true
isSearchable(9): true
isCurrency(9): false
isNullable(9): 0
isSigned(9): false
getColumnDisplaySize(9): 40
getColumnLabel(9): V
getColumnName(9): V
getTableName(9): T
getSchemaName(9): APP
getCatalogName(9): 
getColumnType(9): 12
getPrecision(9): 40
getScale(9): 0
getColumnTypeName(9): VARCHAR
isReadOnly(9): true
isDefinitelyWritable(9): false
isAutoIncrement(10): false
isCaseSensitive(10): false
isSearchable(10): true
isCurrency(10): false
isNullable(10): 1
isSigned(10): true
getColumnDisplaySize(10): 12
getColumnLabel(10): DC
getColumnName(10): DC
getTableName(10): T
getSchemaName(10): APP
getCatalogName(10): 
getColumnType(10): 3
getPrecision(10): 10
getScale(10): 2
getColumnTypeName(10): DECIMAL
isReadOnly(10): true
isDefinitelyWritable(10): false
isAutoIncrement(11): false
isCaseSensitive(11): false
isSearchable(11): true
isCurrency(11): false
isNullable(11): 1
isSigned(11): true
getColumnDisplaySize(11): 20
getColumnLabel(11): BI
getColumnName(11): BI
getTableName(11): T
getSchemaName(11): APP
getCatalogName(11): 
getColumnType(11): -5
getPrecision(11): 19
getScale(11): 0
getColumnTypeName(11): BIGINT
isReadOnly(11): true
isDefinitelyWritable(11): false
isAutoIncrement(12): false
isCaseSensitive(12): false
isSearchable(12): true
isCurrency(12): false
isNullable(12): 1
isSigned(12): false
getColumnDisplaySize(12): 20
getColumnLabel(12): CBD
getColumnName(12): CBD
getTableName(12): T
getSchemaName(12): APP
getCatalogName(12): 
getColumnType(12): -2
getPrecision(12): 10
getScale(12): 0
getColumnTypeName(12): CHAR FOR BIT DATA
isReadOnly(12): true
isDefinitelyWritable(12): false
isAutoIncrement(13): false
isCaseSensitive(13): false
isSearchable(13): true
isCurrency(13): false
isNullable(13): 1
isSigned(13): false
getColumnDisplaySize(13): 20
getColumnLabel(13): VBD
getColumnName(13): VBD
getTableName(13): T
getSchemaName(13): APP
getCatalogName(13): 
getColumnType(13): -3
getPrecision(13): 10
getScale(13): 0
getColumnTypeName(13): VARCHAR FOR BIT DATA
isReadOnly(13): true
isDefinitelyWritable(13): false
isAutoIncrement(14): false
isCaseSensitive(14): false
isSearchable(14): true
isCurrency(14): false
isNullable(14): 1
isSigned(14): false
getColumnDisplaySize(14): 65400
getColumnLabel(14): LVBD
getColumnName(14): LVBD
getTableName(14): T
getSchemaName(14): APP
getCatalogName(14): 
getColumnType(14): -4
getPrecision(14): 32700
getScale(14): 0
getColumnTypeName(14): LONG VARCHAR FOR BIT DATA
isReadOnly(14): true
isDefinitelyWritable(14): false
isAutoIncrement(15): false
isCaseSensitive(15): true
isSearchable(15): true
isCurrency(15): false
isNullable(15): 1
isSigned(15): false
getColumnDisplaySize(15): 2147483647
getColumnLabel(15): CL
getColumnName(15): CL
getTableName(15): T
getSchemaName(15): APP
getCatalogName(15): 
getColumnType(15): 2005
getPrecision(15): 2147483647
getScale(15): 0
getColumnTypeName(15): CLOB
isReadOnly(15): true
isDefinitelyWritable(15): false
isAutoIncrement(16): false
isCaseSensitive(16): false
isSearchable(16): true
isCurrency(16): false
isNullable(16): 1
isSigned(16): false
getColumnDisplaySize(16): -2147483648
getColumnLabel(16): BL
getColumnName(16): BL
getTableName(16): T
getSchemaName(16): APP
getCatalogName(16): 
getColumnType(16): 2004
getPrecision(16): 1073741824
getScale(16): 0
getColumnTypeName(16): BLOB
isReadOnly(16): true
isDefinitelyWritable(16): false
getBigDecimal(1,1): 1
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(i,1): 1
getBoolean(1): true
getBoolean(i): true
getByte(1): 1
getByte(i): 1
getBytes(1) got exception 
Data Conversion SQLException
getBytes(i) got exception 
Data Conversion SQLException
getDate(1) got exception 
Data Conversion SQLException
getDate(i) got exception 
Data Conversion SQLException
getDouble(1): 1.0
getDouble(i): 1.0
getFloat(1): 1.0
getFloat(i): 1.0
getInt(1): 1
getInt(i): 1
getLong(1): 1
getLong(i): 1
getObject(1): 1
getObject(i): 1
getShort(1): 1
getShort(i): 1
getString(1): 1
getString(i): 1
getTime(1) got exception 
Data Conversion SQLException
getTime(i) got exception 
Data Conversion SQLException
getTimestamp(1) got exception 
Data Conversion SQLException
getTimestamp(i) got exception 
Data Conversion SQLException
getBigDecimal(2,1): 2
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(s,1): 2
getBoolean(2): true
getBoolean(s): true
getByte(2): 2
getByte(s): 2
getBytes(2) got exception 
Data Conversion SQLException
getBytes(s) got exception 
Data Conversion SQLException
getDate(2) got exception 
Data Conversion SQLException
getDate(s) got exception 
Data Conversion SQLException
getDouble(2): 2.0
getDouble(s): 2.0
getFloat(2): 2.0
getFloat(s): 2.0
getInt(2): 2
getInt(s): 2
getLong(2): 2
getLong(s): 2
getObject(2): 2
getObject(s): 2
getShort(2): 2
getShort(s): 2
getString(2): 2
getString(s): 2
getTime(2) got exception 
Data Conversion SQLException
getTime(s) got exception 
Data Conversion SQLException
getTimestamp(2) got exception 
Data Conversion SQLException
getTimestamp(s) got exception 
Data Conversion SQLException
getBigDecimal(3,1): 3.3
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(r,1): 3.3
getBoolean(3): true
getBoolean(r): true
getByte(3): 3
getByte(r): 3
getBytes(3) got exception 
Data Conversion SQLException
getBytes(r) got exception 
Data Conversion SQLException
getDate(3) got exception 
Data Conversion SQLException
getDate(r) got exception 
Data Conversion SQLException
getDouble(3): 3.299999952316284
getDouble(r): 3.299999952316284
getFloat(3): 3.3
getFloat(r): 3.3
getInt(3): 3
getInt(r): 3
getLong(3): 3
getLong(r): 3
getObject(3): 3.3
getObject(r): 3.3
getShort(3): 3
getShort(r): 3
getString(3): 3.3
getString(r): 3.3
getTime(3) got exception 
Data Conversion SQLException
getTime(r) got exception 
Data Conversion SQLException
getTimestamp(3) got exception 
Data Conversion SQLException
getTimestamp(r) got exception 
Data Conversion SQLException
getBigDecimal(4,1): 4.4
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(d,1): 4.4
getBoolean(4): true
getBoolean(d): true
getByte(4): 4
getByte(d): 4
getBytes(4) got exception 
Data Conversion SQLException
getBytes(d) got exception 
Data Conversion SQLException
getDate(4) got exception 
Data Conversion SQLException
getDate(d) got exception 
Data Conversion SQLException
getDouble(4): 4.4
getDouble(d): 4.4
getFloat(4): 4.4
getFloat(d): 4.4
getInt(4): 4
getInt(d): 4
getLong(4): 4
getLong(d): 4
getObject(4): 4.4
getObject(d): 4.4
getShort(4): 4
getShort(d): 4
getString(4): 4.4
getString(d): 4.4
getTime(4) got exception 
Data Conversion SQLException
getTime(d) got exception 
Data Conversion SQLException
getTimestamp(4) got exception 
Data Conversion SQLException
getTimestamp(d) got exception 
Data Conversion SQLException
getBigDecimal(5,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(dt,1) got exception 
Data Conversion SQLException
getBoolean(5) got exception 
Data Conversion SQLException
getBoolean(dt) got exception 
Data Conversion SQLException
getByte(5) got exception 
Data Conversion SQLException
getByte(dt) got exception 
Data Conversion SQLException
getBytes(5) got exception 
Data Conversion SQLException
getBytes(dt) got exception 
Data Conversion SQLException
getDate(5): 1990-05-05
getDate(dt): 1990-05-05
getDouble(5) got exception 
Data Conversion SQLException
getDouble(dt) got exception 
Data Conversion SQLException
getFloat(5) got exception 
Data Conversion SQLException
getFloat(dt) got exception 
Data Conversion SQLException
getInt(5) got exception 
Data Conversion SQLException
getInt(dt) got exception 
Data Conversion SQLException
getLong(5) got exception 
Data Conversion SQLException
getLong(dt) got exception 
Data Conversion SQLException
getObject(5): 1990-05-05
getObject(dt): 1990-05-05
getShort(5) got exception 
Data Conversion SQLException
getShort(dt) got exception 
Data Conversion SQLException
getString(5): 1990-05-05
getString(dt): 1990-05-05
getTime(5) got exception 
Data Conversion SQLException
getTime(dt) got exception 
Data Conversion SQLException
getTimestamp(5): xxxxxxFILTERED-TIMESTAMPxxxxx
getTimestamp(dt): xxxxxxFILTERED-TIMESTAMPxxxxx
getBigDecimal(6,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(t,1) got exception 
Data Conversion SQLException
getBoolean(6) got exception 
Data Conversion SQLException
getBoolean(t) got exception 
Data Conversion SQLException
getByte(6) got exception 
Data Conversion SQLException
getByte(t) got exception 
Data Conversion SQLException
getBytes(6) got exception 
Data Conversion SQLException
getBytes(t) got exception 
Data Conversion SQLException
getDate(6) got exception 
Data Conversion SQLException
getDate(t) got exception 
Data Conversion SQLException
getDouble(6) got exception 
Data Conversion SQLException
getDouble(t) got exception 
Data Conversion SQLException
getFloat(6) got exception 
Data Conversion SQLException
getFloat(t) got exception 
Data Conversion SQLException
getInt(6) got exception 
Data Conversion SQLException
getInt(t) got exception 
Data Conversion SQLException
getLong(6) got exception 
Data Conversion SQLException
getLong(t) got exception 
Data Conversion SQLException
getObject(6): 12:06:06
getObject(t): 12:06:06
getShort(6) got exception 
Data Conversion SQLException
getShort(t) got exception 
Data Conversion SQLException
getString(6): 12:06:06
getString(t): 12:06:06
getTime(6): 12:06:06
getTime(t): 12:06:06
getTimestamp(6): xxxxxxFILTERED-TIMESTAMPxxxxx
getTimestamp(t): xxxxxxFILTERED-TIMESTAMPxxxxx
getBigDecimal(7,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(ts,1) got exception 
Data Conversion SQLException
getBoolean(7) got exception 
Data Conversion SQLException
getBoolean(ts) got exception 
Data Conversion SQLException
getByte(7) got exception 
Data Conversion SQLException
getByte(ts) got exception 
Data Conversion SQLException
getBytes(7) got exception 
Data Conversion SQLException
getBytes(ts) got exception 
Data Conversion SQLException
getDate(7): 1990-07-07
getDate(ts): 1990-07-07
getDouble(7) got exception 
Data Conversion SQLException
getDouble(ts) got exception 
Data Conversion SQLException
getFloat(7) got exception 
Data Conversion SQLException
getFloat(ts) got exception 
Data Conversion SQLException
getInt(7) got exception 
Data Conversion SQLException
getInt(ts) got exception 
Data Conversion SQLException
getLong(7) got exception 
Data Conversion SQLException
getLong(ts) got exception 
Data Conversion SQLException
getObject(7): xxxxxxFILTERED-TIMESTAMPxxxxx
getObject(ts): xxxxxxFILTERED-TIMESTAMPxxxxx
getShort(7) got exception 
Data Conversion SQLException
getShort(ts) got exception 
Data Conversion SQLException
getString(7): xxxxxxFILTERED-TIMESTAMPxxxxx
getString(ts): xxxxxxFILTERED-TIMESTAMPxxxxx
getTime(7): 07:07:07
getTime(ts): 07:07:07
getTimestamp(7): xxxxxxFILTERED-TIMESTAMPxxxxx
getTimestamp(ts): xxxxxxFILTERED-TIMESTAMPxxxxx
getBigDecimal(8,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(c,1) got exception 
Data Conversion SQLException
getBoolean(8): true
getBoolean(c): true
getByte(8) got exception 
Data Conversion SQLException
getByte(c) got exception 
Data Conversion SQLException
getBytes(8) got exception 
Data Conversion SQLException
getBytes(c) got exception 
Data Conversion SQLException
getDate(8) got exception 
Data Conversion SQLException
getDate(c) got exception 
Data Conversion SQLException
getDouble(8) got exception 
Data Conversion SQLException
getDouble(c) got exception 
Data Conversion SQLException
getFloat(8) got exception 
Data Conversion SQLException
getFloat(c) got exception 
Data Conversion SQLException
getInt(8) got exception 
Data Conversion SQLException
getInt(c) got exception 
Data Conversion SQLException
getLong(8) got exception 
Data Conversion SQLException
getLong(c) got exception 
Data Conversion SQLException
getObject(8): eight     
getObject(c): eight     
getShort(8) got exception 
Data Conversion SQLException
getShort(c) got exception 
Data Conversion SQLException
getString(8): eight     
getString(c): eight     
getTime(8) got exception 
Data Conversion SQLException
getTime(c) got exception 
Data Conversion SQLException
getTimestamp(8) got exception 
Data Conversion SQLException
getTimestamp(c) got exception 
Data Conversion SQLException
getBigDecimal(9,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(v,1) got exception 
Data Conversion SQLException
getBoolean(9): true
getBoolean(v): true
getByte(9) got exception 
Data Conversion SQLException
getByte(v) got exception 
Data Conversion SQLException
getBytes(9) got exception 
Data Conversion SQLException
getBytes(v) got exception 
Data Conversion SQLException
getDate(9) got exception 
Data Conversion SQLException
getDate(v) got exception 
Data Conversion SQLException
getDouble(9) got exception 
Data Conversion SQLException
getDouble(v) got exception 
Data Conversion SQLException
getFloat(9) got exception 
Data Conversion SQLException
getFloat(v) got exception 
Data Conversion SQLException
getInt(9) got exception 
Data Conversion SQLException
getInt(v) got exception 
Data Conversion SQLException
getLong(9) got exception 
Data Conversion SQLException
getLong(v) got exception 
Data Conversion SQLException
getObject(9): nine
getObject(v): nine
getShort(9) got exception 
Data Conversion SQLException
getShort(v) got exception 
Data Conversion SQLException
getString(9): nine
getString(v): nine
getTime(9) got exception 
Data Conversion SQLException
getTime(v) got exception 
Data Conversion SQLException
getTimestamp(9) got exception 
Data Conversion SQLException
getTimestamp(v) got exception 
Data Conversion SQLException
getBigDecimal(10,1): 10.10
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(dc,1): 10.10
getBoolean(10): true
getBoolean(dc): true
getByte(10): 10
getByte(dc): 10
getBytes(10) got exception 
Data Conversion SQLException
getBytes(dc) got exception 
Data Conversion SQLException
getDate(10) got exception 
Data Conversion SQLException
getDate(dc) got exception 
Data Conversion SQLException
getDouble(10): 10.1
getDouble(dc): 10.1
getFloat(10): 10.1
getFloat(dc): 10.1
getInt(10): 10
getInt(dc): 10
getLong(10): 10
getLong(dc): 10
getObject(10): 10.10
getObject(dc): 10.10
getShort(10): 10
getShort(dc): 10
getString(10): 10.10
getString(dc): 10.10
getTime(10) got exception 
Data Conversion SQLException
getTime(dc) got exception 
Data Conversion SQLException
getTimestamp(10) got exception 
Data Conversion SQLException
getTimestamp(dc) got exception 
Data Conversion SQLException
getBigDecimal(11,1): 11
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(bi,1): 11
getBoolean(11): true
getBoolean(bi): true
getByte(11): 11
getByte(bi): 11
getBytes(11) got exception 
Data Conversion SQLException
getBytes(bi) got exception 
Data Conversion SQLException
getDate(11) got exception 
Data Conversion SQLException
getDate(bi) got exception 
Data Conversion SQLException
getDouble(11): 11.0
getDouble(bi): 11.0
getFloat(11): 11.0
getFloat(bi): 11.0
getInt(11): 11
getInt(bi): 11
getLong(11): 11
getLong(bi): 11
getObject(11): 11
getObject(bi): 11
getShort(11): 11
getShort(bi): 11
getString(11): 11
getString(bi): 11
getTime(11) got exception 
Data Conversion SQLException
getTime(bi) got exception 
Data Conversion SQLException
getTimestamp(11) got exception 
Data Conversion SQLException
getTimestamp(bi) got exception 
Data Conversion SQLException
getBigDecimal(12,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(cbd,1) got exception 
Data Conversion SQLException
getBoolean(12) got exception 
Data Conversion SQLException
getBoolean(cbd) got exception 
Data Conversion SQLException
getByte(12) got exception 
Data Conversion SQLException
getByte(cbd) got exception 
Data Conversion SQLException
getBytes(12): 0x007400770065006C0076
getBytes(cbd): 0x007400770065006C0076
getDate(12) got exception 
Data Conversion SQLException
getDate(cbd) got exception 
Data Conversion SQLException
getDouble(12) got exception 
Data Conversion SQLException
getDouble(cbd) got exception 
Data Conversion SQLException
getFloat(12) got exception 
Data Conversion SQLException
getFloat(cbd) got exception 
Data Conversion SQLException
getInt(12) got exception 
Data Conversion SQLException
getInt(cbd) got exception 
Data Conversion SQLException
getLong(12) got exception 
Data Conversion SQLException
getLong(cbd) got exception 
Data Conversion SQLException
getObject(12) is ok
getObject(cbd) is ok 
getShort(12) got exception 
Data Conversion SQLException
getShort(cbd) got exception 
Data Conversion SQLException
getString(12): 007400770065006c0076
getString(cbd): 007400770065006c0076
getTime(12) got exception 
Data Conversion SQLException
getTime(cbd) got exception 
Data Conversion SQLException
getTimestamp(12) got exception 
Data Conversion SQLException
getTimestamp(cbd) got exception 
Data Conversion SQLException
getBigDecimal(13,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(vbd,1) got exception 
Data Conversion SQLException
getBoolean(13) got exception 
Data Conversion SQLException
getBoolean(vbd) got exception 
Data Conversion SQLException
getByte(13) got exception 
Data Conversion SQLException
getByte(vbd) got exception 
Data Conversion SQLException
getBytes(13): 0x0033007400650065006E
getBytes(vbd): 0x0033007400650065006E
getDate(13) got exception 
Data Conversion SQLException
getDate(vbd) got exception 
Data Conversion SQLException
getDouble(13) got exception 
Data Conversion SQLException
getDouble(vbd) got exception 
Data Conversion SQLException
getFloat(13) got exception 
Data Conversion SQLException
getFloat(vbd) got exception 
Data Conversion SQLException
getInt(13) got exception 
Data Conversion SQLException
getInt(vbd) got exception 
Data Conversion SQLException
getLong(13) got exception 
Data Conversion SQLException
getLong(vbd) got exception 
Data Conversion SQLException
getObject(13) is ok
getObject(vbd) is ok 
getShort(13) got exception 
Data Conversion SQLException
getShort(vbd) got exception 
Data Conversion SQLException
getString(13): 0033007400650065006e
getString(vbd): 0033007400650065006e
getTime(13) got exception 
Data Conversion SQLException
getTime(vbd) got exception 
Data Conversion SQLException
getTimestamp(13) got exception 
Data Conversion SQLException
getTimestamp(vbd) got exception 
Data Conversion SQLException
getBigDecimal(14,1) got exception 
Data Conversion SQLException
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(lvbd,1) got exception 
Data Conversion SQLException
getBoolean(14) got exception 
Data Conversion SQLException
getBoolean(lvbd) got exception 
Data Conversion SQLException
getByte(14) got exception 
Data Conversion SQLException
getByte(lvbd) got exception 
Data Conversion SQLException
getBytes(14): 0x0034007400650065006E
getBytes(lvbd): 0x0034007400650065006E
getDate(14) got exception 
Data Conversion SQLException
getDate(lvbd) got exception 
Data Conversion SQLException
getDouble(14) got exception 
Data Conversion SQLException
getDouble(lvbd) got exception 
Data Conversion SQLException
getFloat(14) got exception 
Data Conversion SQLException
getFloat(lvbd) got exception 
Data Conversion SQLException
getInt(14) got exception 
Data Conversion SQLException
getInt(lvbd) got exception 
Data Conversion SQLException
getLong(14) got exception 
Data Conversion SQLException
getLong(lvbd) got exception 
Data Conversion SQLException
getObject(14) is ok
getObject(lvbd) is ok 
getShort(14) got exception 
Data Conversion SQLException
getShort(lvbd) got exception 
Data Conversion SQLException
getString(14): 0034007400650065006e
getString(lvbd): 0034007400650065006e
getTime(14) got exception 
Data Conversion SQLException
getTime(lvbd) got exception 
Data Conversion SQLException
getTimestamp(14) got exception 
Data Conversion SQLException
getTimestamp(lvbd) got exception 
Data Conversion SQLException
getBigDecimal(15,1): null
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(cl,1): null
getBoolean(15): false
getBoolean(cl): false
getByte(15): 0
getByte(cl): 0
getBytes(15): null
getBytes(cl): null
getDate(15): null
getDate(cl): null
getDouble(15): 0.0
getDouble(cl): 0.0
getFloat(15): 0.0
getFloat(cl): 0.0
getInt(15): 0
getInt(cl): 0
getLong(15): 0
getLong(cl): 0
getObject(15) is ok
getObject(cl) is ok 
getShort(15): 0
getShort(cl): 0
getString(15): null
getString(cl): null
getTime(15): null
getTime(cl): null
getTimestamp(15): null
getTimestamp(cl): null
getBigDecimal(16,1): null
beetle 5328 - JCC returns incorrect scale for getBigDecimal(String,int)
getBigDecimal(bl,1): null
getBoolean(16): false
getBoolean(bl): false
getByte(16): 0
getByte(bl): 0
getBytes(16): null
getBytes(bl): null
getDate(16): null
getDate(bl): null
getDouble(16): 0.0
getDouble(bl): 0.0
getFloat(16): 0.0
getFloat(bl): 0.0
getInt(16): 0
getInt(bl): 0
getLong(16): 0
getLong(bl): 0
getObject(16) is ok
getObject(bl) is ok 
getShort(16): 0
getShort(bl): 0
getString(16): null
getString(bl): null
getTime(16): null
getTime(bl): null
getTimestamp(16): null
getTimestamp(bl): null
rs.next() on closed result set got exception 
Result Set Closed Exception
just auto commit
  bug4810 1, 1
  bug4810 1, 2
  LOCK TABLE
Locks are held
  bug4810 1, 3
  LOCK TABLE
Locks are held
  LOCK TABLE
commit with auto commit
  bug4810 1, 1
  bug4810 1, 2
commit
  LOCK TABLE
Result Set Closed Exception
  LOCK TABLE
  LOCK TABLE
rollback with auto commit
  bug4810 1, 1
  bug4810 1, 2
rollback
  LOCK TABLE
Result Set Closed Exception
  LOCK TABLE
  LOCK TABLE
START testMutableValues
CHECKING on getXXX()
ROW 1
ROW 2
ROW 3
OK EQUALITY OBJECT RETURNED column 4 existing 1
OK EQUALITY OBJECT RETURNED column 5 existing 1
OK EQUALITY OBJECT RETURNED column 6 existing 1
CHECKING on getObject()
ROW 1
ROW 2
ROW 3
OK EQUALITY OBJECT RETURNED column 4 existing 1
OK EQUALITY OBJECT RETURNED column 5 existing 1
OK EQUALITY OBJECT RETURNED column 6 existing 1
COMPLETE testMutableValues
Run select * from s ss (f, e, d, c, b, a) where f = 0 and then try getTableName and getSchemaName on columns
getTableName(1): S
getSchemaName(1): APP
Run select * from (select * from s) a and then try getTableName and getSchemaName on columns
getTableName(1): S
getSchemaName(1): APP
Run select * from s1.t1 as abc and then try getTableName and getSchemaName on columns
Table name of first column is T1
Schema name of first column is S1
Table name of second column is T1
Schema name of second column is S1
Run select abc.c11 from s1.t1 as abc and then try getTableName and getSchemaName on columns
Table name of first column is T1
Schema name of first column is S1
Run select bcd.a, abc.c11 from s1.t1 as abc, s as bcd and then try getTableName and getSchemaName on columns
Table name of first column is S
Schema name of first column is APP
Table name of second column is T1
Schema name of second column is S1
Run select app1.t1.c11, app2.t1.c11 from app1.t1, app2.t1 and then try getTableName and getSchemaName on columns
Table name of first column is T1
Schema name of first column is APP1
Table name of second column is T1
Schema name of second column is APP2
Tests to check metadata information of nullif column
Set up by creating table for testing all datatypes combinations
create table AllDataTypesTable (SMALLINTCOL SMALLINT,INTEGERCOL INTEGER,BIGINTCOL BIGINT,DECIMALCOL DECIMAL(10,5),REALCOL REAL,DOUBLECOL DOUBLE,CHARCOL CHAR(60),VARCHARCOL VARCHAR(60),LONGVARCHARCOL LONG VARCHAR,CHARFORBITCOL CHAR(60) FOR BIT DATA,VARCHARFORBITCOL VARCHAR(60) FOR BIT DATA,LVARCHARFORBITCOL LONG VARCHAR FOR BIT DATA,CLOBCOL CLOB(1k),DATECOL DATE,TIMECOL TIME,TIMESTAMPCOL TIMESTAMP,BLOBCOL BLOB(1k))
insert into AllDataTypesTable values(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL)
insert into AllDataTypesTable values(0,0,0,0.0,0.0,0.0,'0','0','0',X'10aa',X'10aa',X'10aa','13','2000-01-01','15:30:20','xxxxxxFILTERED-TIMESTAMPxxxxx,NULL)
insert into AllDataTypesTable values(1,1,1,1.0,1.0,1.0,'aa','aa','aa',NULL,NULL,NULL,'14','2000-01-01','15:30:20','xxxxxxFILTERED-TIMESTAMPxxxxx,NULL)
insert into AllDataTypesTable values(2,21,22,23.0,24.0,25.0,'2.0','15:30:20','xxxxxxFILTERED-TIMESTAMPxxxxx,X'10aaaa',X'10aaba',X'10aaca',NULL,NULL,'15:30:20','xxxxxxFILTERED-TIMESTAMPxxxxx,NULL)
Start testing all datatypes combinations in NULLIF function
SELECT NULLIF(SMALLINTCOL,SMALLINTCOL) from AllDataTypesTable
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(SMALLINTCOL,INTEGERCOL) from AllDataTypesTable
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{2}
SELECT NULLIF(SMALLINTCOL,BIGINTCOL) from AllDataTypesTable
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{2}
SELECT NULLIF(SMALLINTCOL,DECIMALCOL) from AllDataTypesTable
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{2}
SELECT NULLIF(SMALLINTCOL,REALCOL) from AllDataTypesTable
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{2}
SELECT NULLIF(SMALLINTCOL,DOUBLECOL) from AllDataTypesTable
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{2}
SELECT NULLIF(SMALLINTCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR' are not supported.
SELECT NULLIF(SMALLINTCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'VARCHAR' are not supported.
SELECT NULLIF(SMALLINTCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(SMALLINTCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(SMALLINTCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(SMALLINTCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(SMALLINTCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'CLOB' are not supported.
SELECT NULLIF(SMALLINTCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'DATE' are not supported.
SELECT NULLIF(SMALLINTCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'TIME' are not supported.
SELECT NULLIF(SMALLINTCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'TIMESTAMP' are not supported.
SELECT NULLIF(SMALLINTCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'SMALLINT' and 'BLOB' are not supported.
SELECT NULLIF(INTEGERCOL,SMALLINTCOL) from AllDataTypesTable
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{21}
SELECT NULLIF(INTEGERCOL,INTEGERCOL) from AllDataTypesTable
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(INTEGERCOL,BIGINTCOL) from AllDataTypesTable
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{21}
SELECT NULLIF(INTEGERCOL,DECIMALCOL) from AllDataTypesTable
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{21}
SELECT NULLIF(INTEGERCOL,REALCOL) from AllDataTypesTable
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{21}
SELECT NULLIF(INTEGERCOL,DOUBLECOL) from AllDataTypesTable
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{21}
SELECT NULLIF(INTEGERCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR' are not supported.
SELECT NULLIF(INTEGERCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'VARCHAR' are not supported.
SELECT NULLIF(INTEGERCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(INTEGERCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(INTEGERCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(INTEGERCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(INTEGERCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'CLOB' are not supported.
SELECT NULLIF(INTEGERCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'DATE' are not supported.
SELECT NULLIF(INTEGERCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'TIME' are not supported.
SELECT NULLIF(INTEGERCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'TIMESTAMP' are not supported.
SELECT NULLIF(INTEGERCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'INTEGER' and 'BLOB' are not supported.
SELECT NULLIF(BIGINTCOL,SMALLINTCOL) from AllDataTypesTable
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{22}
SELECT NULLIF(BIGINTCOL,INTEGERCOL) from AllDataTypesTable
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{22}
SELECT NULLIF(BIGINTCOL,BIGINTCOL) from AllDataTypesTable
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(BIGINTCOL,DECIMALCOL) from AllDataTypesTable
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{22}
SELECT NULLIF(BIGINTCOL,REALCOL) from AllDataTypesTable
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{22}
SELECT NULLIF(BIGINTCOL,DOUBLECOL) from AllDataTypesTable
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{22}
SELECT NULLIF(BIGINTCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR' are not supported.
SELECT NULLIF(BIGINTCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'VARCHAR' are not supported.
SELECT NULLIF(BIGINTCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(BIGINTCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(BIGINTCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(BIGINTCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(BIGINTCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'CLOB' are not supported.
SELECT NULLIF(BIGINTCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'DATE' are not supported.
SELECT NULLIF(BIGINTCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'TIME' are not supported.
SELECT NULLIF(BIGINTCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'TIMESTAMP' are not supported.
SELECT NULLIF(BIGINTCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BIGINT' and 'BLOB' are not supported.
SELECT NULLIF(DECIMALCOL,SMALLINTCOL) from AllDataTypesTable
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{23.00000}
SELECT NULLIF(DECIMALCOL,INTEGERCOL) from AllDataTypesTable
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{23.00000}
SELECT NULLIF(DECIMALCOL,BIGINTCOL) from AllDataTypesTable
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{23.00000}
SELECT NULLIF(DECIMALCOL,DECIMALCOL) from AllDataTypesTable
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(DECIMALCOL,REALCOL) from AllDataTypesTable
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{23.00000}
SELECT NULLIF(DECIMALCOL,DOUBLECOL) from AllDataTypesTable
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{23.00000}
SELECT NULLIF(DECIMALCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR' are not supported.
SELECT NULLIF(DECIMALCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'VARCHAR' are not supported.
SELECT NULLIF(DECIMALCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(DECIMALCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(DECIMALCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(DECIMALCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(DECIMALCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'CLOB' are not supported.
SELECT NULLIF(DECIMALCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'DATE' are not supported.
SELECT NULLIF(DECIMALCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'TIME' are not supported.
SELECT NULLIF(DECIMALCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'TIMESTAMP' are not supported.
SELECT NULLIF(DECIMALCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DECIMAL' and 'BLOB' are not supported.
SELECT NULLIF(REALCOL,SMALLINTCOL) from AllDataTypesTable
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{24.0}
SELECT NULLIF(REALCOL,INTEGERCOL) from AllDataTypesTable
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{24.0}
SELECT NULLIF(REALCOL,BIGINTCOL) from AllDataTypesTable
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{24.0}
SELECT NULLIF(REALCOL,DECIMALCOL) from AllDataTypesTable
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{24.0}
SELECT NULLIF(REALCOL,REALCOL) from AllDataTypesTable
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(REALCOL,DOUBLECOL) from AllDataTypesTable
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{24.0}
SELECT NULLIF(REALCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'CHAR' are not supported.
SELECT NULLIF(REALCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'VARCHAR' are not supported.
SELECT NULLIF(REALCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(REALCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(REALCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(REALCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(REALCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'CLOB' are not supported.
SELECT NULLIF(REALCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'DATE' are not supported.
SELECT NULLIF(REALCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'TIME' are not supported.
SELECT NULLIF(REALCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'TIMESTAMP' are not supported.
SELECT NULLIF(REALCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'REAL' and 'BLOB' are not supported.
SELECT NULLIF(DOUBLECOL,SMALLINTCOL) from AllDataTypesTable
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{25.0}
SELECT NULLIF(DOUBLECOL,INTEGERCOL) from AllDataTypesTable
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{25.0}
SELECT NULLIF(DOUBLECOL,BIGINTCOL) from AllDataTypesTable
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{25.0}
SELECT NULLIF(DOUBLECOL,DECIMALCOL) from AllDataTypesTable
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{25.0}
SELECT NULLIF(DOUBLECOL,REALCOL) from AllDataTypesTable
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{25.0}
SELECT NULLIF(DOUBLECOL,DOUBLECOL) from AllDataTypesTable
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(DOUBLECOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR' are not supported.
SELECT NULLIF(DOUBLECOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'VARCHAR' are not supported.
SELECT NULLIF(DOUBLECOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(DOUBLECOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(DOUBLECOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(DOUBLECOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(DOUBLECOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'CLOB' are not supported.
SELECT NULLIF(DOUBLECOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'DATE' are not supported.
SELECT NULLIF(DOUBLECOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'TIME' are not supported.
SELECT NULLIF(DOUBLECOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'TIMESTAMP' are not supported.
SELECT NULLIF(DOUBLECOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DOUBLE' and 'BLOB' are not supported.
SELECT NULLIF(CHARCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'SMALLINT' are not supported.
SELECT NULLIF(CHARCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'INTEGER' are not supported.
SELECT NULLIF(CHARCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'BIGINT' are not supported.
SELECT NULLIF(CHARCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'DECIMAL' are not supported.
SELECT NULLIF(CHARCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'REAL' are not supported.
SELECT NULLIF(CHARCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'DOUBLE' are not supported.
SELECT NULLIF(CHARCOL,CHARCOL) from AllDataTypesTable
	 COL1(datatype : CHAR, precision : 60, scale : 0)
	 ------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(CHARCOL,VARCHARCOL) from AllDataTypesTable
	 COL1(datatype : CHAR, precision : 60, scale : 0)
	 ------------------------------------------------
	{null}
	{null}
	{null}
	{2.0                                                         }
SELECT NULLIF(CHARCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(CHARCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(CHARCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(CHARCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(CHARCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'CLOB' are not supported.
SELECT NULLIF(CHARCOL,DATECOL) from AllDataTypesTable
	 COL1(datatype : CHAR, precision : 60, scale : 0)
	 ------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(CHARCOL,TIMECOL) from AllDataTypesTable
	 COL1(datatype : CHAR, precision : 60, scale : 0)
	 ------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(CHARCOL,TIMESTAMPCOL) from AllDataTypesTable
	 COL1(datatype : CHAR, precision : 60, scale : 0)
	 ------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(CHARCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR' and 'BLOB' are not supported.
SELECT NULLIF(VARCHARCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'SMALLINT' are not supported.
SELECT NULLIF(VARCHARCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'INTEGER' are not supported.
SELECT NULLIF(VARCHARCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'BIGINT' are not supported.
SELECT NULLIF(VARCHARCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'DECIMAL' are not supported.
SELECT NULLIF(VARCHARCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'REAL' are not supported.
SELECT NULLIF(VARCHARCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'DOUBLE' are not supported.
SELECT NULLIF(VARCHARCOL,CHARCOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR, precision : 60, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{15:30:20}
SELECT NULLIF(VARCHARCOL,VARCHARCOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR, precision : 60, scale : 0)
	 ---------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(VARCHARCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(VARCHARCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(VARCHARCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(VARCHARCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(VARCHARCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'CLOB' are not supported.
SELECT NULLIF(VARCHARCOL,DATECOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR, precision : 60, scale : 0)
	 ---------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(VARCHARCOL,TIMECOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR, precision : 60, scale : 0)
	 ---------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(VARCHARCOL,TIMESTAMPCOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR, precision : 60, scale : 0)
	 ---------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(VARCHARCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR' and 'BLOB' are not supported.
SELECT NULLIF(LONGVARCHARCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'SMALLINT' are not supported.
SELECT NULLIF(LONGVARCHARCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'INTEGER' are not supported.
SELECT NULLIF(LONGVARCHARCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'BIGINT' are not supported.
SELECT NULLIF(LONGVARCHARCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'DECIMAL' are not supported.
SELECT NULLIF(LONGVARCHARCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'REAL' are not supported.
SELECT NULLIF(LONGVARCHARCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'DOUBLE' are not supported.
SELECT NULLIF(LONGVARCHARCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'CHAR' are not supported.
SELECT NULLIF(LONGVARCHARCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'VARCHAR' are not supported.
SELECT NULLIF(LONGVARCHARCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(LONGVARCHARCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(LONGVARCHARCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(LONGVARCHARCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(LONGVARCHARCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'CLOB' are not supported.
SELECT NULLIF(LONGVARCHARCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'DATE' are not supported.
SELECT NULLIF(LONGVARCHARCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'TIME' are not supported.
SELECT NULLIF(LONGVARCHARCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'TIMESTAMP' are not supported.
SELECT NULLIF(LONGVARCHARCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'BLOB' are not supported.
SELECT NULLIF(CHARFORBITCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'SMALLINT' are not supported.
SELECT NULLIF(CHARFORBITCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'INTEGER' are not supported.
SELECT NULLIF(CHARFORBITCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'BIGINT' are not supported.
SELECT NULLIF(CHARFORBITCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'DECIMAL' are not supported.
SELECT NULLIF(CHARFORBITCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'REAL' are not supported.
SELECT NULLIF(CHARFORBITCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'DOUBLE' are not supported.
SELECT NULLIF(CHARFORBITCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR' are not supported.
SELECT NULLIF(CHARFORBITCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'VARCHAR' are not supported.
SELECT NULLIF(CHARFORBITCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(CHARFORBITCOL,CHARFORBITCOL) from AllDataTypesTable
	 COL1(datatype : CHAR FOR BIT DATA, precision : 60, scale : 0)
	 -------------------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(CHARFORBITCOL,VARCHARFORBITCOL) from AllDataTypesTable
	 COL1(datatype : CHAR FOR BIT DATA, precision : 60, scale : 0)
	 -------------------------------------------------------------
	{null}
	{null}
	{null}
	{10aaaa202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020}
SELECT NULLIF(CHARFORBITCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(CHARFORBITCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CLOB' are not supported.
SELECT NULLIF(CHARFORBITCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'DATE' are not supported.
SELECT NULLIF(CHARFORBITCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'TIME' are not supported.
SELECT NULLIF(CHARFORBITCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'TIMESTAMP' are not supported.
SELECT NULLIF(CHARFORBITCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'BLOB' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'SMALLINT' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'INTEGER' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'BIGINT' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'DECIMAL' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'REAL' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'DOUBLE' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'CHAR' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,CHARFORBITCOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR FOR BIT DATA, precision : 60, scale : 0)
	 ----------------------------------------------------------------
	{null}
	{null}
	{null}
	{10aaba}
SELECT NULLIF(VARCHARFORBITCOL,VARCHARFORBITCOL) from AllDataTypesTable
	 COL1(datatype : VARCHAR FOR BIT DATA, precision : 60, scale : 0)
	 ----------------------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(VARCHARFORBITCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'CLOB' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'DATE' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'TIME' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'TIMESTAMP' are not supported.
SELECT NULLIF(VARCHARFORBITCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'BLOB' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'SMALLINT' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'INTEGER' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'BIGINT' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'DECIMAL' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'REAL' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'DOUBLE' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'CHAR' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'CLOB' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'DATE' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'TIME' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'TIMESTAMP' are not supported.
SELECT NULLIF(LVARCHARFORBITCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'BLOB' are not supported.
SELECT NULLIF(CLOBCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'SMALLINT' are not supported.
SELECT NULLIF(CLOBCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'INTEGER' are not supported.
SELECT NULLIF(CLOBCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'BIGINT' are not supported.
SELECT NULLIF(CLOBCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'DECIMAL' are not supported.
SELECT NULLIF(CLOBCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'REAL' are not supported.
SELECT NULLIF(CLOBCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'DOUBLE' are not supported.
SELECT NULLIF(CLOBCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'CHAR' are not supported.
SELECT NULLIF(CLOBCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'VARCHAR' are not supported.
SELECT NULLIF(CLOBCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(CLOBCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(CLOBCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(CLOBCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(CLOBCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'CLOB' are not supported.
SELECT NULLIF(CLOBCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'DATE' are not supported.
SELECT NULLIF(CLOBCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'TIME' are not supported.
SELECT NULLIF(CLOBCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'TIMESTAMP' are not supported.
SELECT NULLIF(CLOBCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'CLOB' and 'BLOB' are not supported.
SELECT NULLIF(DATECOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'SMALLINT' are not supported.
SELECT NULLIF(DATECOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'INTEGER' are not supported.
SELECT NULLIF(DATECOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'BIGINT' are not supported.
SELECT NULLIF(DATECOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'DECIMAL' are not supported.
SELECT NULLIF(DATECOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'REAL' are not supported.
SELECT NULLIF(DATECOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'DOUBLE' are not supported.
SELECT NULLIF(DATECOL,CHARCOL) from AllDataTypesTable
	 COL1(datatype : DATE, precision : 10, scale : 0)
	 ------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(DATECOL,VARCHARCOL) from AllDataTypesTable
	 COL1(datatype : DATE, precision : 10, scale : 0)
	 ------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(DATECOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(DATECOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(DATECOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(DATECOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(DATECOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'CLOB' are not supported.
SELECT NULLIF(DATECOL,DATECOL) from AllDataTypesTable
	 COL1(datatype : DATE, precision : 10, scale : 0)
	 ------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(DATECOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'TIME' are not supported.
SELECT NULLIF(DATECOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'TIMESTAMP' are not supported.
SELECT NULLIF(DATECOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'DATE' and 'BLOB' are not supported.
SELECT NULLIF(TIMECOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'SMALLINT' are not supported.
SELECT NULLIF(TIMECOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'INTEGER' are not supported.
SELECT NULLIF(TIMECOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'BIGINT' are not supported.
SELECT NULLIF(TIMECOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'DECIMAL' are not supported.
SELECT NULLIF(TIMECOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'REAL' are not supported.
SELECT NULLIF(TIMECOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'DOUBLE' are not supported.
SELECT NULLIF(TIMECOL,CHARCOL) from AllDataTypesTable
	 COL1(datatype : TIME, precision : 8, scale : 0)
	 -----------------------------------------------
Data Conversion SQLException
SELECT NULLIF(TIMECOL,VARCHARCOL) from AllDataTypesTable
	 COL1(datatype : TIME, precision : 8, scale : 0)
	 -----------------------------------------------
Data Conversion SQLException
SELECT NULLIF(TIMECOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(TIMECOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(TIMECOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(TIMECOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(TIMECOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'CLOB' are not supported.
SELECT NULLIF(TIMECOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'DATE' are not supported.
SELECT NULLIF(TIMECOL,TIMECOL) from AllDataTypesTable
	 COL1(datatype : TIME, precision : 8, scale : 0)
	 -----------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(TIMECOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'TIMESTAMP' are not supported.
SELECT NULLIF(TIMECOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIME' and 'BLOB' are not supported.
SELECT NULLIF(TIMESTAMPCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'SMALLINT' are not supported.
SELECT NULLIF(TIMESTAMPCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'INTEGER' are not supported.
SELECT NULLIF(TIMESTAMPCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'BIGINT' are not supported.
SELECT NULLIF(TIMESTAMPCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'DECIMAL' are not supported.
SELECT NULLIF(TIMESTAMPCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'REAL' are not supported.
SELECT NULLIF(TIMESTAMPCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'DOUBLE' are not supported.
SELECT NULLIF(TIMESTAMPCOL,CHARCOL) from AllDataTypesTable
	 COL1(datatype : TIMESTAMP, precision : 26, scale : 6)
	 -----------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(TIMESTAMPCOL,VARCHARCOL) from AllDataTypesTable
	 COL1(datatype : TIMESTAMP, precision : 26, scale : 6)
	 -----------------------------------------------------
Data Conversion SQLException
SELECT NULLIF(TIMESTAMPCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(TIMESTAMPCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(TIMESTAMPCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(TIMESTAMPCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(TIMESTAMPCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'CLOB' are not supported.
SELECT NULLIF(TIMESTAMPCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'DATE' are not supported.
SELECT NULLIF(TIMESTAMPCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'TIME' are not supported.
SELECT NULLIF(TIMESTAMPCOL,TIMESTAMPCOL) from AllDataTypesTable
	 COL1(datatype : TIMESTAMP, precision : 26, scale : 6)
	 -----------------------------------------------------
	{null}
	{null}
	{null}
	{null}
SELECT NULLIF(TIMESTAMPCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'TIMESTAMP' and 'BLOB' are not supported.
SELECT NULLIF(BLOBCOL,SMALLINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'SMALLINT' are not supported.
SELECT NULLIF(BLOBCOL,INTEGERCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'INTEGER' are not supported.
SELECT NULLIF(BLOBCOL,BIGINTCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'BIGINT' are not supported.
SELECT NULLIF(BLOBCOL,DECIMALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'DECIMAL' are not supported.
SELECT NULLIF(BLOBCOL,REALCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'REAL' are not supported.
SELECT NULLIF(BLOBCOL,DOUBLECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'DOUBLE' are not supported.
SELECT NULLIF(BLOBCOL,CHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'CHAR' are not supported.
SELECT NULLIF(BLOBCOL,VARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'VARCHAR' are not supported.
SELECT NULLIF(BLOBCOL,LONGVARCHARCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'LONG VARCHAR' are not supported.
SELECT NULLIF(BLOBCOL,CHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'CHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(BLOBCOL,VARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'VARCHAR () FOR BIT DATA' are not supported.
SELECT NULLIF(BLOBCOL,LVARCHARFORBITCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'LONG VARCHAR FOR BIT DATA' are not supported.
SELECT NULLIF(BLOBCOL,CLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'CLOB' are not supported.
SELECT NULLIF(BLOBCOL,DATECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'DATE' are not supported.
SELECT NULLIF(BLOBCOL,TIMECOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'TIME' are not supported.
SELECT NULLIF(BLOBCOL,TIMESTAMPCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'TIMESTAMP' are not supported.
SELECT NULLIF(BLOBCOL,BLOBCOL) from AllDataTypesTable
ERROR 42818: Comparisons between 'BLOB' and 'BLOB' are not supported.
Start testing first operand as parameter to nullif
Testing nullif(?,SMALLINT)
Testing nullif(?,SMALLINT) with setBoolean
	 COL1(datatype : SMALLINT, precision : 5, scale : 0)
	 ---------------------------------------------------
	{1}
	{1}
	{null}
	{1}
Testing nullif(?,INTEGER)
Testing nullif(?,INTEGER) with setBoolean
	 COL1(datatype : INTEGER, precision : 10, scale : 0)
	 ---------------------------------------------------
	{1}
	{1}
	{null}
	{1}
Testing nullif(?,BIGINT)
Testing nullif(?,BIGINT) with setBoolean
	 COL1(datatype : BIGINT, precision : 19, scale : 0)
	 --------------------------------------------------
	{1}
	{1}
	{null}
	{1}
Testing nullif(?,DECIMAL(10,5))
Testing nullif(?,DECIMAL(10,5)) with setBoolean
	 COL1(datatype : DECIMAL, precision : 10, scale : 5)
	 ---------------------------------------------------
	{1.00000}
	{1.00000}
	{null}
	{1.00000}
Testing nullif(?,REAL)
Testing nullif(?,REAL) with setBoolean
	 COL1(datatype : REAL, precision : 7, scale : 0)
	 -----------------------------------------------
	{1.0}
	{1.0}
	{null}
	{1.0}
Testing nullif(?,DOUBLE)
Testing nullif(?,DOUBLE) with setBoolean
	 COL1(datatype : DOUBLE, precision : 15, scale : 0)
	 --------------------------------------------------
	{1.0}
	{1.0}
	{null}
	{1.0}
Testing nullif(?,CHAR(60))
Testing nullif(?,CHAR(60)) with setBoolean
	 COL1(datatype : CHAR, precision : 60, scale : 0)
	 ------------------------------------------------
	{1}
	{1}
	{1}
	{1}
Testing nullif(?,VARCHAR(60))
Testing nullif(?,VARCHAR(60)) with setBoolean
	 COL1(datatype : VARCHAR, precision : 60, scale : 0)
	 ---------------------------------------------------
	{1}
	{1}
	{1}
	{1}
Testing nullif(?,LONG VARCHAR)
Testing nullif(?,LONG VARCHAR) with setBinaryStream
ERROR 42818: Comparisons between 'LONG VARCHAR' and 'LONG VARCHAR' are not supported.
Testing nullif(?,CHAR(60) FOR BIT DATA)
Testing nullif(?,CHAR(60) FOR BIT DATA) with setBinaryStream
	 COL1(datatype : CHAR FOR BIT DATA, precision : 60, scale : 0)
	 -------------------------------------------------------------
	{null}
	{null}
	{null}
	{null}
Testing nullif(?,VARCHAR(60) FOR BIT DATA)
Testing nullif(?,VARCHAR(60) FOR BIT DATA) with setBinaryStream
	 COL1(datatype : VARCHAR FOR BIT DATA, precision : 60, scale : 0)
	 ----------------------------------------------------------------
	{null}
	{null}
	{null}
	{null}
Testing nullif(?,LONG VARCHAR FOR BIT DATA)
Testing nullif(?,LONG VARCHAR FOR BIT DATA) with setBinaryStream
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'LONG VARCHAR FOR BIT DATA' are not supported.
Testing nullif(?,CLOB(1k))
Testing nullif(?,CLOB(1k)) with setBinaryStream
ERROR 42818: Comparisons between 'CLOB' and 'CLOB' are not supported.
Testing nullif(?,DATE)
Testing nullif(?,DATE) with setDate
	 COL1(datatype : DATE, precision : 10, scale : 0)
	 ------------------------------------------------
	{2000-01-01}
	{null}
	{null}
	{2000-01-01}
Testing nullif(?,TIME)
Testing nullif(?,TIME) with setTime
	 COL1(datatype : TIME, precision : 8, scale : 0)
	 -----------------------------------------------
	{15:30:20}
	{null}
	{null}
	{null}
Testing nullif(?,TIMESTAMP)
Testing nullif(?,TIMESTAMP) with setTimestamp
	 COL1(datatype : TIMESTAMP, precision : 26, scale : 6)
	 -----------------------------------------------------
	{xxxxxxFILTERED-TIMESTAMPxxxxx}
	{null}
	{null}
	{null}
Testing nullif(?,BLOB(1k))
Testing nullif(?,BLOB(1k)) with setBinaryStream
ERROR 42818: Comparisons between 'BLOB' and 'BLOB' are not supported.
Test resultset finished
