# this file holds tests that cannot be successfully run with DerbyNetClient framework
# with a remote server. Tests in this file will be skipped in addition to those in 
# DerbyNetClient.exclude when the property -DhostName is set to something else than the localhost
#
# excluding test   - because...
# store/bootLock.java - this test uses local connections to make sure 
#     a database cannot be loaded by 2 different instances.
# jdbcapi/secureUsers,secureUsers1, users and users2.sql 
#     because they expect the server to have been started with special derby.properties
#     this test can be made to work by changing the properties from system properties
#     i.e. set in a derby.properties file - to be database properties - i.e. set using
#     SYSCS_SET_ procedure.
# derbynet/dblook_test_net because it tries to search derby.log, which is on
#     the server machine
# derbynet/getCurrentProperties for it exercises NetworkServerControl statements
#     that are only supported on localhost
# derbynet/NSinSameJVM - tries to start the server
# derbynet/DataSourcePermissions_net - tries to use NetworkServerControl statements
# derbynet/maxthreads - tries to use NetworkServerControl statements
# derbynet/runtimeinfo - tries to use NetworkServerControl statements
# derbynet/sysinfo - tries to use NetworkServerControl statements
# derbynet/sysinfo_withproperties - tries to use NetworkServerControl statements and for the test, server needs to be
# started with specific property set - DERBY928 for reference 
# derbynet/testSecMec - this test requires property to be set when server is started with derby.drda.securityMechanism
# thus not suitable for remote server testing in its current form. - DERBY-928
# derbynet/testProperties - tries to use NetworkServerControl statements
# derbynet/timeslice - tries to use NetworkServerControl statements
# derbynet/DerbyNetAutoStart - tries to start networkserver
# derbynet/DerbyNetNewServer - tries to start networkserver and uses local connections to the db.
# tools/ieptests - names files in extin dir, but they are on the server
# tools/importExport - tries to confirm correct export by file-comparing the exported files,
#	which may be on a different machine and thus not found.
# lang/wisconsin - optimization is quite different when running remote server.
# junitTests/derbyNet/CompatibilityTest.java - tries to start and shutdown the server.
# jdbcapi/checkDataSource.java - test leaves things in a bad state, causing the subsequent
#       tests to fail when run on same database. See DERBY-1760.
# jdbcapi/checkDataSource30.java - ditto to checkDataSource.
# derbynet/ShutDownDBWhenNSShutsDownTest.junit - test tries to look for db.lck file
# lang/grantRevoke.java - this test expects certain properties in the remote server's 
#       derby.properties file.
#  
# 
store/bootLock.java
jdbcapi/secureUsers.sql
jdbcapi/secureUsers1.sql
jdbcapi/users.sql
jdbcapi/users2.sql
derbynet/dblook_test_net.java
derbynet/getCurrentProperties.java
derbynet/NSinSameJVM.java
derbynet/DataSourcePermissions_net.java
derbynet/maxthreads.java
derbynet/runtimeinfo.java
derbynet/sysinfo.java
derbynet/sysinfo_withproperties.java
derbynet/testProperties.java
derbynet/testSecMec.java
derbynet/timeslice.java
derbynet/DerbyNetAutoStart.java
derbynet/DerbyNetNewServer.java
tools/ieptests.sql
tools/importExport.java
lang/wisconsin.java
junitTests/derbyNet/CompatibilityTest.java
jdbcapi/checkDataSource.java
jdbcapi/checkDataSource30.java
derbynet/ShutDownDBWhenNSShutsDownTest.junit
lang/grantRevoke.java
